---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/10/14 19:43
---

Archive = Archive or {}

function Archive:Ctor()
    self._selectHeroId = 0;
    self._heroData = {};
end

function Archive:SetCurSelectHeroId(heroId)
    self._selectHeroId = heroId;
end

function Archive:GetCurSelectHeroId()
    if(self._selectHeroId == nil or self._selectHeroId == 0)then
        CS.Logger.LogError("heroid is nil");
        return 0;
    end
    return self._selectHeroId;
end

function Archive:UpdateAdd()
    self:SetAllHeroAttrAdd();
    self:SetAllHeroBuildAdd();
end

--获取已领取的魔女图鉴星级
function Archive:GetHeroStarById(heroId)
    heroId = tonumber(heroId);
    return self._heroData[heroId] or 0;
end

function Archive:SetAllHeroAttrAdd()
    self._attrAdds = Archive:NewAttrAdd();
    local heroIds = Hero:GetHaveIds();
    for _, v in ipairs(heroIds) do
        self:AddHeroAttrAdd(v);
    end
end

function Archive:NewAttrAdd()
    local retArr = {}
    for _, v in pairs(Hero.ArchiveAttr) do
        retArr[v] = {
            isPercent = true,
            addNum = 0,
        };
    end
    return retArr;
end

--添加指定米女的属性加成
function Archive:AddHeroAttrAdd(heroId)
    local attrAdd = Archive:GetHeroAttrAdd(heroId,self:GetHeroStarById(heroId));
    for k, add in pairs(attrAdd) do
        if(self._attrAdds[k] == nil)then
            self._attrAdds[k] = {
                addNum = add.addNum,
            };
        else
            self._attrAdds[k].addNum = self._attrAdds[k].addNum + add.addNum;
        end
    end
end

--删除指定魔女的属性加成
function Archive:RemoveHeroAttrAdd(heroId)
    local attrAdd = Archive:GetHeroAttrAdd(heroId,self:GetHeroStarById(heroId));
    for k, add in pairs(attrAdd) do
        if(self._attrAdds[k] == nil)then
            CS.Logger.LogError("attrAdd is nil  heroId = "..heroId);
        else
            self._attrAdds[k].addNum = self._attrAdds[k].addNum - add.addNum;
        end
    end
end

--获取角色属性加成
function Archive:GetHeroAttrAdd(heroId,curStar)
    local hero,bookCfg;
    local retData = {};
    hero = Hero:GetHero(heroId);
    if(hero.owner)then
        bookCfg = self._handBookCfg[heroId];
        local starNum = curStar - tonumber(hero.config.Star);
        for i = 1, starNum + 1 do
            if bookCfg.attrAdd[i] == nil then
                AppMgr:LogError("[Handbook]配置表出错，请检测配置。HeroId = " .. heroId)
            else
                if(retData[bookCfg.attrAdd[i][1]] == nil)then
                    retData[bookCfg.attrAdd[i][1]] = {
                       -- isPercent = bookCfg.attrAdd[i][2] == 2,
                        addNum = bookCfg.attrAdd[i][2],
                    };
                else
                    retData[bookCfg.attrAdd[i][1]].addNum = retData[bookCfg.attrAdd[i][1]].addNum + bookCfg.attrAdd[i][2];
                end
            end
        end
    end
    return retData;
end


function Archive:GetAttrAdds()
    if(self._attrAdds == nil)then
        CS.Logger.LogError("attrAdds is nil");
        return nil;
    end
    local retArr = {};
    for i, v in pairs(self._attrAdds) do
        local attrcfg = CAttr:GetCfg(i)
        local isPer = attrcfg.show_type == CAttr.SHOW_TYPE_PER
        table.insert(retArr,{id = i,addNum = v.addNum,isPercent = isPer });
    end
    table.sort(retArr,function (a,b)
        return a.id < b.id;
    end)
    return retArr;
end

function Archive:SetAllHeroBuildAdd()
    self._buildAdds = self:NewBuildAdd();
    local heroIds = Hero:GetHaveIds();
    for _, v in ipairs(heroIds) do
        self:AddHeroBuildAdd(v);
    end
end

function Archive:NewBuildAdd()
    local retArr = {}
    for _, v in pairs(Hero.AtkTypes) do
        retArr[v] = {
            isPercent = true,
            addNum = 0,
        };
    end
    return retArr;
end

--添加指定魔女的构筑加成
function Archive:AddHeroBuildAdd(heroId)
    local buildAdd = Archive:GetHeroBuildAdd(heroId,self:GetHeroStarById(heroId));
    for k, add in pairs(buildAdd) do
        if(self._buildAdds[k] == nil)then
            self._buildAdds[k] = {
                isPercent = add.isPercent,
                addNum = add.addNum,
            };
        else
            self._buildAdds[k].addNum = self._buildAdds[k].addNum + add.addNum;
        end
    end
end

--删除指定魔女的构筑加成
function Archive:RemoveHeroBuildAdd(heroId)
    local buildAdd = Archive:GetHeroBuildAdd(heroId,self:GetHeroStarById(heroId));
    for k, add in pairs(buildAdd) do
        if(self._buildAdds[k] == nil)then
            CS.Logger.LogError("attrAdd is nil  heroId = "..heroId);
        else
            self._buildAdds[k].addNum = self._buildAdds[k].addNum - add.addNum;
        end
    end
end

--获取角色构筑加成
function Archive:GetHeroBuildAdd(heroId,curStar)
    local hero,bookCfg,atkType;
    local retData = {};
    hero = Hero:GetHero(heroId);
    if(hero.owner)then
        atkType = tonumber(hero.config.AtkType);
        bookCfg = self._handBookCfg[heroId];
        local starNum = curStar - tonumber(hero.config.Star);
        for i = 1, starNum + 1 do
            if bookCfg.attrAdd[i] == nil then
                AppMgr:LogError("[Handbook]配置表出错，请检测配置。HeroId = " .. heroId)
            else
                if(retData[atkType] == nil)then
                    retData[atkType] = {
                        isPercent = bookCfg.buildAdd[i][1] == 2,
                        addNum = bookCfg.buildAdd[i][2],
                    };
                else
                    retData[atkType].addNum = retData[atkType].addNum + bookCfg.buildAdd[i][2];
                end
            end
        end
    end
    return retData;
end

function Archive:GetBuildAddByAtkType(atype)
    if(self._buildAdds == nil)then
        CS.Logger.LogError("_buildAdd is null!!!");
        return nil;
    end
    if(atype == nil)then
        return self._buildAdds;
    end
    return self._buildAdds[atype];
end

function Archive:GetPhotoIdsByAtkType(atkType)
    if(atkType == nil)then
        CS.Logger.LogError(" quality  is nil!!");
        return nil;
    end
    atkType = tonumber(atkType);
    if(self._photoIds[atkType] == nil)then
        CS.Logger.LogError(" ids is nil!! quality = "..atkType);
        return nil;
    end
    return self._photoIds[atkType];
end

function Archive:GetHeroAddIsGet(heroId)
    local isGet = false;
    local hero = Hero:GetHero(heroId);
    if(self._heroData[heroId] ~= nil)then
        if(hero.owner)then
            if(hero.star > self._heroData[heroId])then
                isGet = true;
            end
        end
    else
        if(hero.owner)then
            isGet = true;
        end
    end
    return isGet;
end

function Archive:GetRedStateByAtkType(atkType)
    if not Player:IsSysFuncOpen(Player.SYS_FUNC.sys_archive) then
        return false
    end
    local heroIds = atkType == nil and Hero:GetIds() or Hero:GetIdsByAtkType(atkType)
    for _, id in pairs(heroIds) do
        if(Archive:GetHeroAddIsGet(id))then
            return true;
        end
    end
    return false;
end

function Archive:Clear()
    self:Ctor()
end

