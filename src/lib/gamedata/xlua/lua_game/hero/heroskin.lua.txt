---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/8/30 13:27
---
Hero = Hero or {}

function Hero:_LoadSkinCfg()
    if(self._SkinCfgs == nil)then
        self._SkinCfgs = {};
        for _, v in pairs(CfgLoader:LoadCfg("Skin")) do
            v.name  = Language:GetTxtBuyId(v.name)
            v.nameE = Language:GetTxtBuyId(v.nameEN)
            v.des   = Language:GetTxtBuyId(v.des)
            v.buyType = tonumber(v.buyType)
            v.buyDes = Language:GetTxtBuyId(v.buyDes)
            v.skinIsHaveShow = tonumber(v.skin_noshow)
            v.previewbutton = tonumber(v.previewbutton)
            v.kanban_noshow = tonumber(v.kanban_noshow)
            if v.skinSkills ~= "-1" then
                v.skillids = lua_str_split(v.skinSkills, "|")
            else
                v.skillids = {}
            end

            if v.skin_show ~= "-1" then
                v.skillShowIds = lua_str_split(v.skin_show, "|")
            else
                v.skillShowIds = {}
            end

            v.buildids = {}
            if v.skinBuildIds ~= "-1" then
                for _, id in ipairs(lua_str_split(v.skinBuildIds, "|")) do
                    table.insert(v.buildids, tonumber(id))
                end
            end

            if(v.plat ~= "-1")then
                v.platIds = lua_str_split(v.plat, "|")
            else
                v.platIds = nil;
            end

            v.SkinRare = tonumber(v.SkinRare)
                        
            self._SkinCfgs[tonumber(v.id)] = v

        end
    end
end

function Hero:SetSkinBuyId()
    for id, cfg in pairs(self._SkinCfgs) do
        cfg.buyId = 0;
        if(cfg.buyType == Hero.SKIN_BUY_TYPE.GOID)then
            local datas = Recharge:GetAllDataByType_NotTimer(Recharge.ChargeType.Skin);
            for _, v in pairs(datas) do
                if(v.goods[1][2] == id)then
                    cfg.buyId = v.cfgid;
                end
            end
        end
    end
end

function Hero:GetSkinCfg(cfgid)
    if(self._SkinCfgs == nil)then
        self:_LoadSkinCfg();
    end
    if self._SkinCfgs[cfgid] == nil then
        CS.Logger.LogError("can't find skin cfg id: {0}", cfgid)
    end
    return self._SkinCfgs[cfgid]
end

function Hero:GetSkinSkillById(skinid)
    local cfg = self:GetSkinCfg(skinid)
    if cfg ~= nil then
        return cfg.skillids
    end
    return {}
end

function Hero:GetSkinSkillShowById(skinid)
    local cfg = self:GetSkinCfg(skinid)
    if cfg ~= nil then
        return cfg.skillShowIds
    end
    return {}
end

function Hero:GetSkinBuildById(skinid)
    local cfg = self:GetSkinCfg(skinid)
    if cfg ~= nil then
        return cfg.buildids
    end
    return {}
end

function Hero:SetSkinImage(img,id)
    if img == nil or id == nil then return end

    img:LoadSprite("source_avatar/hero/card_" .. id);
end

function Hero:SetBodyImage(img,id)
    if img == nil or id == nil then return end

    img:LoadSprite("source_avatar/hero/body_" .. id)
end

function Hero:SetHeroSkinId(hero, skinid)
    hero.skinid     = skinid
    hero.wear_skin  = hero.skinid ~= hero.skinids[1]
end

function Hero:GetOwnedSkins(heroid)
    local skins = {}
    local hero = self:GetHero(heroid)
    for _,skinid in pairs(hero.skinids) do
        if Item:GetCount(skinid) > 0 then
            table.insert(skins , skinid)
        end
    end
    return skins
end

function Hero:GetKanbanSkins(heroid)
    local skins = {}
    local hero = self:GetHero(heroid)
    for _,skinid in pairs(hero.skinids) do
        if self._SkinCfgs[skinid].kanban_noshow ~= -1 then
            table.insert(skins , skinid)
        end
    end
    return skins
end

function Hero:IsHasNewHeroSkin(heroid)
    local hero = self:GetHero(heroid)
    if #hero.skinids <= 1 then return false end

    for i = 2, #hero.skinids, 1 do
        if self:IsNewSkin(heroid, hero.skinids[i]) then
            return true
        end
    end
    return false
end

function Hero:IsNewSkin(heroid, skinid)
    local hero = self:GetHero(heroid)
    if #hero.skinids <= 1 then return false end
    -- 默认皮肤
    if hero.skinids[1] == skinid then return false end

    if Item:GetCount(skinid) > 0 then
        if not Player:CheckRedPoint(4, skinid) then
            return true
        end
    end
    return false
end

function Hero:NewSkinEnter(heroid, skinid)
    if self:IsNewSkin(heroid, skinid) then
        Player:RedPointReq(4, skinid)
    end
end

function Hero:SetSkinRare(imgRare, qlty)
    imgRare:SetVisible(qlty ~= Hero.SKIN_RARE_0)
    if qlty == Hero.SKIN_RARE_1 then
        imgRare:LoadSprite("source_common/ImageText/Text_skinrare_1")
    elseif qlty == Hero.SKIN_RARE_2 then
        imgRare:LoadSprite("source_common/ImageText/Text_skinrare_2")
    elseif qlty == Hero.SKIN_RARE_3 then
        imgRare:LoadSprite("source_common/ImageText/Text_skinrare_3")
    elseif qlty == Hero.SKIN_RARE_4 then
        imgRare:LoadSprite("source_common/ImageText/Text_skinrare_4")
    elseif qlty == Hero.SKIN_RARE_5 then
        imgRare:LoadSprite("source_common/ImageText/Text_skinrare_5")
    end
end

function Hero:SetSkinTheme(imgCursor, theme)
    if theme == "-1" or theme == "" then
        imgCursor:SetVisible(false)
    else
        imgCursor:LoadSprite(theme)
        imgCursor:SetVisible(true)
    end
end

