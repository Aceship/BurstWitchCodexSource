--
-- author: haosun
-- date  : 2018-11-12 21:08:41
-- brief : 
--

Item = Item or {}

function Item:_LoadDropConfig()
    self._drop_config = CfgLoader:LoadCfgTable("Dropitem")
end

--isShow:是否是显示掉落
function Item:GetDrops(dropid,isShow)
    local drops = {}
    local config = self._drop_config[dropid..""]
    if config ~= nil  then
        local items = lua_parse_cfg(config["show_prop"])
        for _, v in ipairs(items) do
            table.insert(drops, {tonumber(v[1]), tonumber(v[2]), tonumber(v[3]), Bag.TYPE_NORMAL})
        end
        if(isShow)then
            return drops;
        end
        if config["may_show_prop"] ~= "-1"   then
            items = lua_parse_cfg(config["may_show_prop"])
            drops = {}
            for _, v in ipairs(items) do
                table.insert(drops, {tonumber(v[1]), tonumber(v[2]), tonumber(v[3]), tonumber(v[4])})
            end
        end

    else
        CS.Logger.LogError("can't find Dropitem config!!! id = " .. dropid)
    end
    return drops
end

function Item:AddEndDrops(ds,endDropId)
    local config = self._drop_config[endDropId..""]
    if config ~= nil  then
        local items = lua_parse_cfg(config["show_prop"])
        for _, v in ipairs(items) do
            table.insert(ds, {tonumber(v[1]), tonumber(v[2]), tonumber(v[3]), Bag.TYPE_NORMAL})
        end
    else
        CS.Logger.LogError("can't find Dropitem config!!! id = " .. endDropId)
    end
end

function Item:GetAllDrops(id)
    local drops = {}
    local config = self._drop_config[id..""]
    if config ~= nil  then
        for i = 1, 10 do
            local items = lua_parse_cfg(config["prop_"..i])
            if(items ~= "-1")then
                for _, v in ipairs(items) do
                    table.insert(drops, {tonumber(v[1]), tonumber(v[2]), tonumber(v[3])})
                end
            end
        end
    else
        CS.Logger.LogError("can't find Dropitem config!!! id = " .. id)
    end
    return drops
end

function Item:GetDropNumberById(dropid, cfgid)
    local drops = {}
    local config = self._drop_config[dropid..""]
    if config == nil then return 0, fasle end
    local number, maybe = 0, false 
    for i = 1, 10 do
        if config["prop_"..i] == "-1" then
            -- break
        else
            local items = lua_parse_cfg(config["prop_"..i], true)
            for _, v in ipairs(items) do
                if v[2] == cfgid then
                    if v[5] < 10000 then
                        maybe = true
                    else
                        number = number + v[3]
                    end
                end
            end
        end
    end
    return number, maybe
end

function Item:CheckBlackMarket()
    local _array
    for _, v in pairs(self._drop_config) do
        if tonumber(v.id) >= 9100001 and tonumber(v.id) <= 9100501 then
            _array = lua_parse_cfg(v.prop_1, true)

            for i, data in ipairs(_array) do
                local _cfg = Item:GetCfg(data[2])
                if _cfg.price == "0&0" then
                    print("error!!! = ", v.id, data[2])
                end
            end
        end
    end
end

function Item:CheckItemOrigin()
    for _, cfg in pairs(self._cfgs) do
        for i, v in ipairs(cfg.itemForm) do
            if v[1] == "1" then
                Chapter:GmCheckItemOrigin(_, tonumber(v[2]))
            end
        end
    end
end

