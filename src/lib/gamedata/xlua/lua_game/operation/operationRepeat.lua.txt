---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/9/19 15:38
-----重复礼包
---
Operation = Operation or {};

function Operation:SetRepeatData(data)
    self._repeatData = data or {};
end

function Operation:GetRepeatDataById(cfgId)
    return self._repeatData[cfgId];
end

--获取重复礼包领取状态
--return 礼包状态, 可以领取的数量, 当前领取下表
function Operation:GetRepeatGetStateById(cfgId)
    local data = Operation:GetRepeatDataById(cfgId);
    local getState = Recharge.RepeatState.UnBuy;
    local canGetNum = 0;
    local getPos = 0;
    if(data == nil)then--数据为空,判断是否已领取完
        if(Operation:GetGiftBagBoughtNum(cfgId) > 0)then
            getState = Recharge.RepeatState.GetOver;
        end
        return getState,canGetNum,getPos;
    end
    getState = Recharge.RepeatState.Buy;
    local cfg = Recharge:GetChargeContinueCfgById(cfgId);
    if(cfg.getType == Recharge.RepeatGetType.UnNeedLogin)then --无需登录, 直接计算时间差值
        canGetNum = CTime:GetOffsetDay() - data.sday + 1;
        getPos = data.pos;
    elseif(cfg.getType == Recharge.RepeatGetType.NeedLogin)then --需登录
        if(data.dgot <= 0)then--今日未领取, 可领取数为当前领取位置 + 1  (策划需求)
            canGetNum = data.pos + 1;
        end
        getPos = data.pos;
    end
    return getState,canGetNum,getPos;
end

function Operation:GetRepeatReq(id)
    Network:CallServerScript({c2s.CHARGE_GET_REPEAT_GIFTS_REQ, id});
end

function Operation:GetRepeatRep(id,pos)
    local data = self._repeatData[id];
    local cfg = Recharge:GetChargeContinueCfgById(id);
    data.pos = pos;
    if(pos == #cfg.dropIds)then
        self._repeatData[id] = nil;
    else
        data.dgot = 1;
    end
    GEvent:fireEvent(EVENT_NAME.UI_REFRESH_REDTIP);
    GEvent:fireEvent(EVENT_TYPE.UPDATE_GIFT_BAG);
end

function Operation:UpdateRepeatServerData()
    for _, v in pairs(self._repeatData) do
        v.dgot = 0;
    end
end

function Operation:InitRepeatDataById(id)
    self._repeatData[id] = {
        pos = 0,
        dgot = 0,
        sday = CTime:GetOffsetDay(),
        id = id
    };
end

function Operation:GetFirstRedState()
    local firstBuyCfg = Recharge:GetFirstBuyCfg();
    return Operation:GetRepeatBagRedState(firstBuyCfg.cfgid);
end

function Operation:GetRepeatBagRedState(cfgid)
    local serverData = Operation:GetRepeatDataById(cfgid);
    local showRed = false;
    if(serverData ~= nil)then
        if(serverData.dgot <= 0)then
            showRed = true;
        end
    end
    return showRed;
end

--获取重复礼包开放状态
function Operation:GetRepeatBagIsOpen(charge)
    local giftState = Operation:GetRepeatGetStateById(charge.cfgid);
    if(giftState ~= Recharge.RepeatState.UnBuy)then--为购买, 走通用逻辑
        if(giftState == Recharge.RepeatState.Buy)then--购买但未领取结束, 直接打开
            return true;
        end
        if(giftState == Recharge.RepeatState.GetOver)then--领取结束, 直接关闭
            return false;
        end
    end
    return nil;
end

c2s[c2s.CHARGE_GET_REPEAT_GIFTS_RES]        = {Operation, Operation.GetRepeatRep}