---
--- @Author:2144
--- @Create Time:2021-05-13 14:04:40
---
local CBaseLayer = core.require("xlua/lua_UI/UIBaseLayer.txt")
local ChessRuleTipsLayer = class("ChessRuleTipsLayer", CBaseLayer)
--按钮
local BTNS = {
	BtnReturn = "btn_return",
	--@ButtonEnd
}

local ShowType = {
    Rule = 1,
    Event = 2,
}

--构造函数
function ChessRuleTipsLayer:ctor(super)
    CBaseLayer.ctor(self)
    self._prefab = {
        path = "prefab_uiActivity/UI_ChessRuleTipsLayer",
    }
    self._uitype= 2;
    self._fading = false;
    self:onEnter();
end


--进入Ui调用一次
function ChessRuleTipsLayer:onEnter()
    --self:RegisterHandler();
    self:createPnl();
    self:registerButtonEvent(BTNS);
    self:Init();
end

--按钮事件
function ChessRuleTipsLayer:onButtonClick(itype)
    if(itype == BTNS.BtnReturn)then 
	   self:OnBtnReturnClick();
    else--@ButtonCallBackEnd
	end--RemoveEnd
end

--初始化
function ChessRuleTipsLayer:Init()
    self._curSelectType = -1;
    self:InitUI();
end

--初始化UI
function ChessRuleTipsLayer:InitUI()

	--@ImageEnd

	self._txtRule = self.layer:GetTextComponent("trans_container/trans_rule/txt_rule");
	--@TextEnd

	self._transRule = self.layer:Get("trans_container/trans_rule");
	self._transTableViewCtrl = self.layer:Get("trans_container/trans_table_view_ctrl");
	self._transEmpty = self.layer:Get("trans_container/trans_table_view_ctrl/trans_empty");
	--@TransformEnd

	--@RectTransformEnd

	--@GameObjectEnd

	self._mTogRule = self.layer:GetMToggleComponent("trans_container/tog_bg/tog_rule");
	self._mTogRecord = self.layer:GetMToggleComponent("trans_container/tog_bg/tog_record");
	--@MToggleEnd

	self._mTogRule.onValueChanged:AddListener(function (isOn)
	   self:OnTogRuleClick(isOn);
   end);
	self._mTogRecord.onValueChanged:AddListener(function (isOn)
	   self:OnTogRecordClick(isOn);
   end);
	--@MToggleCallBackEnd  
end

--显示UI
function ChessRuleTipsLayer:show()
    self._mTogRule.isOn = true;
    self:showLayer();
end

--退出按钮事件
function ChessRuleTipsLayer:onBackClick()
    self:onPopLayer();
end

--释放
function ChessRuleTipsLayer:onExit()

    self._eventData = nil;
    self._activityCfg = nil;
    self._mTogRule = nil;
    self._mTogRecord = nil;
    self._transRule = nil;
    self._txtRule = nil;
	self._transTableViewCtrl = nil;
	self._transEmpty = nil;
	--@CloseEnd
    CBaseLayer.onExit(self);
end

---------------------------------------------------------BtnClick------------------------------------------------------------------------------

function ChessRuleTipsLayer:OnBtnReturnClick()
    self:onBackClick();
 end
--@ButtonFunctionEnd

---------------------------------------------------------TogClick------------------------------------------------------------------------------

function ChessRuleTipsLayer:OnTogRuleClick(isOn)
    if(isOn)then
        if(self._curSelectType == ShowType.Rule)then
            return;
        end
        self._curSelectType = ShowType.Rule;
        self:CutShowLayer();
    end
 end
function ChessRuleTipsLayer:OnTogRecordClick(isOn)
    if(isOn)then
        if(self._curSelectType == ShowType.Event)then
            return;
        end
        self._curSelectType = ShowType.Event;
        self:CutShowLayer();
    end
 end
--@MToggleFunctionEnd

------------------------------------------------------事件-----------------------------------------------------------------------

--[[function ChessRuleTipsLayer:RegisterHandler()
    --self:addEventListener(EVENT_TYPE.DAY_UPDATE,self.__cname,function()

    --end);
end]]--

------------------------------------------------------OtherFunction-----------------------------------------------------------------------

function ChessRuleTipsLayer:CutShowLayer()
    self._transRule:SetVisible(self._curSelectType == ShowType.Rule);
    self._transTableViewCtrl:SetVisible(self._curSelectType == ShowType.Event);
    if(self._curSelectType == ShowType.Rule)then
        self._transEmpty:SetVisible(false);
        if(self._activityCfg ~= nil)then
            return;
        end
        self._activityCfg = Activity:GetActivityByUId(Operation.ActivityID.ChessBoard).info;
        local ruleid = tonumber(self._activityCfg.ruleid);
        local cfg = CCfg:GetRuleCfg(ruleid);
        if cfg == nil then
            self._txtRule.text = "Error rule config！！！";
        else
            self._txtRule.text = string.gsub(cfg.desc, '\\n', '\n');
        end
    elseif(self._curSelectType == ShowType.Event)then
        if(self._eventData ~= nil)then
            self._transEmpty:SetVisible(#self._eventData <= 0);
            return;
        end
        self._eventData = Activity:GetChessEventData();
        self._transEmpty:SetVisible(#self._eventData <= 0);
        self:SetTableView();
    else

    end
end

function ChessRuleTipsLayer:SetTableView()
    local row = #self._eventData;
    if(self._tvController == nil)then
        self._eventCell = {};
        self._tvController = UIController:CtorTableView(self._transTableViewCtrl);
        self._tvController:Init(row, true,
                function(cell, row)
                    self:SetCell(cell, row + 1);
                end, 0.15, 0.07)
    else
        self._tvController:Reload(row)
        self._tvController:ScrollToTop();
    end
end

function ChessRuleTipsLayer:SetCell(cell,row)
    local cls = self._eventCell[cell];
    if(cls == nil)then
        cls = self:InitCell(cell);
        self._eventCell[cell] = cls;
    end
    self:SetCellData(cls,self._eventData[row]);
end

function ChessRuleTipsLayer:InitCell(cell)
    local cls = clsbase:new(cell);
    cls.txtUse = cls:GetTextComponent("txt_use");
    cls.txtEvent = cls:GetTextComponent("txt_event");
    cls.item = Bag:CtorComSimpleGoodsUi(cls:Find("item"),function (item)
        if(cls.data.item ~= -1 and #cls.data.item == 1)then
            SingletonMgr:ShowItemTipsLayer(cls.obj, item.data[1], item.data[2],item.isUid);
        end
    end);
    return cls;
end

function ChessRuleTipsLayer:SetCellData(cls,data)
    cls.data = data;
    local str = "";
    if(data.diceType == Activity.DiceType.Common)then
        str = LanguageMgr:GetTextByID(90346);
    elseif(data.diceType == Activity.DiceType.Special)then
        str = LanguageMgr:GetTextByID(90347);
    end
    cls.txtUse:SetText(string.format(LanguageMgr:GetTextByID(90348),str,data.addNum));
    cls.item.borderCom:SetVisible(data.eventType == Activity.ChessBoardGridType.Null);
    cls.item:Visible(data.eventType ~= Activity.ChessBoardGridType.Null or data.item ~= -1);
    if(data.eventType == Activity.ChessBoardGridType.Next)then--下一层
        cls.item.iconImg:LoadSprite("source_common/ImageText/text_xiayiceng_3");
        str = LanguageMgr:GetTextByID(90349);
    elseif(data.eventType == Activity.ChessBoardGridType.Double)then
        cls.item.iconImg:LoadSprite("source_common/ImageText/text_double_3");
        str = LanguageMgr:GetTextByID(90350);
    elseif(data.eventType == Activity.ChessBoardGridType.BigGift)then
        cls.item.iconImg:LoadSprite("source_common/ImageText/text_bonus_3");
        str = LanguageMgr:GetTextByID(90351);
    else
        if(data.item ~= -1)then
            local cfg = Item:GetCfg(data.item[1][2]);
            local num = data.item[1][3];
            if(data.isDouble)then
                num = num * 2;
            end
            str = string.format("%s +%s",cfg.Name,num);
            Bag:SetComSimpleGoodsUi(cls.item,data.item[1][1],data.item[1][2]);
        else
            str = LanguageMgr:GetTextByID(90352);
        end
    end
    cls.txtEvent:SetText(str);
end

return ChessRuleTipsLayer;
