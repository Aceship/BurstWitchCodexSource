--
-- author: haosun
-- date  : 2021-08-31 14:00:14
-- brief : 
--

UIHeroIntroCtrl = class("UIHeroIntroCtrl")

function UIHeroIntroCtrl:ctor(super, parent)
    self._uiintro = parent:CreateChild("prefab_witch/ui_hero_info")
    self._txtName   = self._uiintro:GetTextComponent("txt_name")
    self._txtTitle  = self._uiintro:GetTextComponent("txt_title")
    self._imgAttr   = self._uiintro:GetImageComponent("img_attr")
    self._imgAtkType= self._uiintro:GetImageComponent("img_atk_type")
    self._transQlty = self._uiintro:Get("img_qlty")

    self._uiintro:GetButtonComponent("btn_attr"):AddButtonListener(
        function()
            self:onClickAttr()
        end)

    self._uiintro:GetButtonComponent("img_atk_type"):AddButtonListener(
        function()
            self:onClickAtkType()
        end)

    CS.UnityHelper.NotchfitY(self._uiintro)

    self._uiintro:SetPositionX(-540, true)
    self._uiintro.transform:DOLocalMoveX(0, 0.2)
end

function UIHeroIntroCtrl:UIHeroIntroCtrlDtor()
    if self._uiintro ~= nil then
        self._uiintro:Release()
        self._uiintro = nil
    end

    self._txtName   = nil
    self._txtTitle  = nil
    self._imgAttr   = nil
    self._imgQlty   = nil
end

function UIHeroIntroCtrl:InitUIHeroIntroCtrl(heroId, onlyIntro)
    local cfg = Hero:GetCfg(heroId)
    self._attri_type = tonumber(cfg.attri_type)
    self._atk_type = tonumber(cfg.AtkType)

    self._txtName:SetText(cfg.Name)
    self._txtTitle:SetText(cfg.Name_after)
    self._imgAttr:LoadAtlasSprite(AtlasMgr.COM_RES, AtlasMgr.IMG_ATTRIBUTE[self._attri_type])
    self._imgAtkType:LoadAtlasSprite(AtlasMgr.COM_RES, AtlasMgr.IMG_ATK_TYPE[self._atk_type])

    local qlty = tonumber(cfg.Quality)
    if not onlyIntro then
        qlty = Hero:GetHero(heroId).qlty
    end
    Hero:SetHeroQlty(self._transQlty, qlty, true)
end

function UIHeroIntroCtrl:onClickAttr()
end

function UIHeroIntroCtrl:onClickAtkType()
    local atkcfg = Build:GetAtkTypeCfgById(self._atk_type)
    Groble_UIMgr:ShowDescTipsLayer(self._imgAtkType.transform, atkcfg.name, atkcfg.desc)
end

