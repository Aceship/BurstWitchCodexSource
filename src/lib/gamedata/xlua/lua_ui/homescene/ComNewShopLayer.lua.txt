--
-- author: haosun
-- date  : 2019-10-22 14:37:05
-- brief : 
--
local CBaseLayer = core.require("xlua/lua_UI/UIBaseLayer.txt")
local ComNewShopLayer = class("ComNewShopLayer", CBaseLayer)

local _max_number = 3

function ComNewShopLayer:ctor(super, parent)
    CBaseLayer.ctor(self)
    self._prefab = {
        path = "prefab_uiHome/sys/UI_ComNewShopLayer",
        trans = parent,
        obj = true
    }
    self._cells = {}
    self:onEnter()
end

function ComNewShopLayer:onEnter()
    self:createPnl()
    self:addEventListener(EVENT_TYPE.UPDATE_GIFT_BAG, self.__cname, function()
        self:refreshTableViewController(false)
    end)
    self:refreshData()
    self._tvController = UIController:CtorTableView(self.layer:Get("TableViewController"))
    self._tvController:Init(self._nRows, true,
        function(cell, row)
            self:refreshUnitCell(cell, row)
        end, 0.2, 0.1)
end

function ComNewShopLayer:onExit()
    if self._cells ~= nil then
        for _, clsArr in pairs(self._cells) do
            for i, cls in ipairs(clsArr) do
                cls:clear()
            end
        end
        self._cells = nil
    end
    self._chargeIds = nil
    CBaseLayer.onExit(self)
end

function ComNewShopLayer:show()    
    self:refreshTableViewController(true)
    self:showLayer()
end

function ComNewShopLayer:onBuyItemClick(cfgId)
    Recharge:SetCurSelectGiftPagId(cfgId)
    Recharge:OpenBuyTipsLayer()
end

function ComNewShopLayer:refreshData()
    self._chargeIds = Operation:GetCurChargeIds()
    self._nRows = math.ceil(#self._chargeIds / _max_number)
    local id = Operation:GetActiveCfgByUID(Operation:GetCurSelectUID()).id;
    if(not Recharge:GetNewChargeIsLookById(id))then
        Recharge:NewChargeIsLook(id);
        Operation:SetTogRedPoint();
    end
end

function ComNewShopLayer:refreshTableViewController(aniPlay)
    self:refreshData()
    self._tvController:Reload(self._nRows, aniPlay)
    self._tvController:ScrollToTop()
end

function ComNewShopLayer:refreshUnitCell(cell, row)
    local prefab = self._cells[cell.cellInstanceIndex]
    if prefab == nil then
        prefab = self:onUnitCellCtor(cell.transform)
        self._cells[cell.cellInstanceIndex] = prefab
    end
    self:onUnitCellSet(prefab, row)
end

function ComNewShopLayer:onUnitCellCtor(transform)
    local rst = {}
    for i = 1, _max_number, 1 do
        local obj = transform:Get("item_" .. i)
        local cls = clearbase:new()
        cls.transform       = obj
        cls.img_bg          = obj:GetImageComponent("img_bg")
        cls.img_icon        = obj:GetImageComponent("img_icon")
        cls.cls_items       = { 
            Bag:CtorComSimpleGoodsUi(obj:Get("item1")),
            Bag:CtorComSimpleGoodsUi(obj:Get("item2")),
            Bag:CtorComSimpleGoodsUi(obj:Get("item3")),
        }
        cls.txt_name        = obj:GetTextComponent("txt_name")
        cls.txt_count_down  = obj:GetTextComponent("txt_count_down")
        cls.obj_price       = obj:Get("obj_price")
        cls.obj_free        = obj:Get("obj_free")
        cls.obj_tips        = obj:Get("img_tips")
        cls.img_price_icon  = obj:GetImageComponent("obj_price/txt_real_price/img_pirce_icon")
        cls.txt_org_price   = obj:GetTextComponent("obj_price/txt_org_price")
        cls.txt_real_price  = obj:GetTextComponent("obj_price/txt_real_price")
        cls.obj_limit       = obj:Get("limit_buy")
        cls.txt_limit_num   = obj:GetTextComponent("limit_buy/txt_limit_buy_num")        
        cls.txt_tag         = obj:GetTextComponent("txt_tag")
        cls.img_tag         = obj:GetImageComponent("img_tag")
        cls.img_mask        = obj:GetImageComponent("img_mask")
        cls.obj_is_get      = obj:Get("img_is_get")
        cls.obj_open        = obj:Get("obj_open")
        cls.imgTagNew       = obj:GetImageComponent("img_tag_new")
        cls.txt_open        = obj:GetTextComponent("obj_open/txt_open_value")
        cls.btn_click       = obj:GetComponent("Button")
        cls.cfgId           = 0
        cls.countDown       = nil
        cls.bgPath          = ""
        cls.btn_click:AddButtonListener(function()
            self:onBuyItemClick(cls.cfgId)
        end)

        rst[i] = cls
    end
    return rst
end

function ComNewShopLayer:onUnitCellSet(cell, row)
    local index = 0
    for i = 1, _max_number do
        index = row * _max_number + i
        local obj = cell[i]
        obj.cfgId = self._chargeIds[index]
        obj.transform:SetVisible(obj.cfgId ~= nil)
        if obj.cfgId ~= nil then
            self:refreshOneBuyObj(obj)
        end
    end
end

function ComNewShopLayer:refreshOneBuyObj(obj)
    local isSellOut = false
    local _config = Recharge:GetData(obj.cfgId)
    local count = #_config.goods
    if count > 3 then
        AppMgr:LogInfo("！！！！！！！！！超过约定的个数，多余的不再显示")
    end
    count = math.min(count, 3)
    local posx = -70 + (3 - count) * 35
    for i = 1, 3, 1 do        
        obj.cls_items[i].transform:SetVisible(_config.goods[i] ~= nil)
        obj.cls_items[i].transform:SetPositionX(posx + (i-1)*70, true)
        if _config.goods[i] ~= nil then
            Bag:SetComSimpleGoodsUi(obj.cls_items[i], _config.goods[i][1], _config.goods[i][2], _config.goods[i][3])
        end
    end
     obj.img_icon:LoadSprite(_config.icon)
    if _config.bgPath[2] ~= obj.bgPath and _config.bgPath ~= -1 then
        if tonumber(_config.bgPath[1]) == Recharge.GiftBgImage then
            obj.img_bg:SetEnabled(true);
            obj.img_bg:LoadAtlasSprite("source_atlas/atlas_operation", _config.bgPath)
        elseif tonumber(_config.bgPath[1]) == Recharge.GiftBgSpine then
            obj.img_bg:SetEnabled(false);
            if(obj.spineBorder ~= nil)then
                obj.spineBorder:Release();
            end
            obj.spineBorder = obj.img_bg.transform:CreateChild(string.format("prefab_item_spine/%s",_config.bgPath[2]));
        end
        obj.bgPath = _config.bgPath[2]
    end
    obj.txt_name:SetText(_config.name)

    if(_config.timeId > 0)then
        obj.countDown = CTime:GetRemainTime(_config.timeId)
        if(obj.countDown <= 0)then
            obj.countDown = -1;
        end
    else
        obj.countDown = nil
    end

    self:UpdateCountDown(obj)

    local _tmpprice
    local _tmpdiscount

    local chargeMoneyConfig
    if -1 == _config.chargeMoneyId then
        _tmpprice = _config.price
        _tmpdiscount = _config.discount        
    else
        -- 直购类型
        chargeMoneyConfig = Recharge:GetRechargeMoneyCfg(_config.chargeMoneyId)
        _tmpprice = chargeMoneyConfig.price
        _tmpdiscount = chargeMoneyConfig.discount
    end
    --折扣
    obj.txt_org_price:SetVisible(_tmpdiscount < 1)
    local strTag
    if _tmpprice <= 0 then
        obj.obj_price:SetVisible(false)
        obj.obj_free:SetVisible(true)
        obj.obj_tips:SetVisible(true)
    else
        if _tmpdiscount < 1 then
            strTag = string.format(LanguageMgr:GetTextByID(90248), ""..math.ceil(_tmpdiscount * 10))
            obj.txt_org_price:SetText(_tmpprice)
        end
        obj.obj_price:SetVisible(true)
        obj.obj_free:SetVisible(false)
        obj.obj_tips:SetVisible(false)
    end

    obj.obj_limit:SetVisible(_config.stock > 0)
    local str = ""
    if _config.buytype == Recharge.BuyType.day then
        str = LanguageMgr:GetTextByID(90207)
    elseif _config.buytype == Recharge.BuyType.Week then
        str = LanguageMgr:GetTextByID(90208)
    elseif _config.buytype == Recharge.BuyType.Month then
        str = LanguageMgr:GetTextByID(90209)
    elseif _config.buytype == Recharge.BuyType.Normal then
        if _config.stock > 0 then
            str = LanguageMgr:GetTextByID(90210)
        end
    elseif _config.buytype == Recharge.BuyType.IsDoubleWeek then
        str = LanguageMgr:GetTextByID(90211)
    end
    local buyNum = Operation:GetGiftBagBoughtNum(obj.cfgId)
    if _config.buytype ~= Recharge.BuyType.Normal then
        isSellOut = _config.stock - buyNum <= 0
        obj.txt_limit_num:SetText(string.format(str,_config.stock - buyNum,_config.stock))
    else
        if(_config.stock <= 0)then
            isSellOut = false;
        else
            isSellOut = _config.stock - buyNum <= 0;
            obj.txt_limit_num:SetText(string.format(str,_config.stock - buyNum,_config.stock));
        end
    end
    obj.img_price_icon:SetEnabled(not isSellOut)
    obj.txt_real_price:SetEnabled(not isSellOut)
    if not isSellOut then
        if -1 == _config.chargeMoneyId then
            obj.img_price_icon:LoadSprite(Item:GetItemIconPathByName(_config.priceId))
            obj.img_price_icon:SetEnabled(true)
            obj.txt_real_price:SetText(math.ceil(_tmpprice * _tmpdiscount))
        else
            obj.img_price_icon:SetEnabled(false)
            obj.txt_real_price:SetText(uistr.com_rmb .. math.ceil(_tmpprice * _tmpdiscount))
        end
        obj.txt_real_price:SetSizeX(obj.txt_real_price:GetTextX() + 10)
    end
    obj.obj_is_get:SetVisible(isSellOut)
    if isSellOut then
        obj.obj_tips:SetVisible(false)
    end

    local isOpen, lockType, lockValue = Recharge:GetChargeOpenStateById(obj.cfgId)
    obj.obj_open:SetVisible(not isOpen)
    if not isOpen then
        if lockType == Recharge.OpenType.Chapter then
            obj.txt_open:SetText(string.format(LanguageMgr:GetTextByID(90212), lockValue))
        elseif lockType == Recharge.OpenType.Lv then
            obj.txt_open:SetText(string.format(LanguageMgr:GetTextByID(90213), lockValue))
        elseif lockType == Recharge.OpenType.LastGift then
            local temp = Recharge:GetData(lockValue)
            obj.txt_open:SetText(string.format(LanguageMgr:GetTextByID(90214), temp.name))
        end
    end
    obj.img_mask:SetEnabled(isSellOut or not isOpen)
    obj.btn_click.interactable = not isSellOut and isOpen

    -- 设置角标
    Operation:SetCursorTag(obj.img_tag, obj.txt_tag, _config.tag, strTag)

    obj.imgTagNew:SetEnabled(_config.isNew > 0);
end

--倒计时更新
function ComNewShopLayer:UpdateCountDown(cls)
    local countDownStr = ""
    if(cls.countDown ~= nil)then
        if(cls.countDown > -1)then--倒计时有剩余时间
            countDownStr = string.format(LanguageMgr:GetTextByID(90397),CTime:Time2Str_3(cls.countDown))
        elseif(cls.countDown <= -1)then--无剩余时间
            countDownStr = LanguageMgr:GetTextByID(90182)
        end
    end
    cls.txt_count_down:SetText(countDownStr)
end

--秒更新
function ComNewShopLayer:onPerSecondUpdate()
    if(self._cells == nil or #self._cells <= 0)then
        return;
    end
    for _, cell in pairs(self._cells) do
        for i = 1, _max_number do
            if(cell[i].cfgId ~= nil)then
                if(cell[i].countDown ~= nil)then
                    if(cell[i].countDown >= 0)then
                        cell[i].countDown = cell[i].countDown - 1;
                        self:UpdateCountDown(cell[i]);
                    end
                end
            end
        end
    end
end

return ComNewShopLayer
