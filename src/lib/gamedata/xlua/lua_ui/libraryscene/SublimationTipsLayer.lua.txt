---
--- @Author:Administrator
--- @Create Time:2021-04-02 16:34:06
---
local CBaseLayer = core.require("xlua/lua_UI/UIBaseLayer.txt")
local SublimationTipsLayer = class("SublimationTipsLayer", CBaseLayer)
--按钮
local BTNS = {
    BtnCloseLayer = "trans_container/trans_scrub/trans_dialog/btn_close_layer",
    BtnSublimation = "trans_container/trans_sublimation/info_up/btn_sublimation",
    BtnReturn = "btn_return",
    BtnNextTips = "trans_container/trans_lock_back/trans_dialog/txt_next_tips",
    --@ButtonEnd
}

-- 擦除状态
local ScrubState = {
    NotScrub = 0,--禁止擦除
    Scrub = 1,--擦除中
    ScrubOver = 2,--擦除完毕

}
--构造函数
function SublimationTipsLayer:ctor(super)
    CBaseLayer.ctor(self)
    self._prefab = {
        path = "prefab_fetter/UI_SublimationTipsLayer",
    }
    self._topData = {};
    self._addStack = true;
    self._uitype = 2;
    self._fading = false;
    self._isDrag = false;
    self._CDTime = 5;
    self._curCDTime = 0;
    self._tipsShowTime = 5;
    self._doNextIndex = 1;
    self._curStr = nil;
    self._curScrubState = ScrubState.NotScrub;
    self:onEnter();
end


--进入Ui调用一次
function SublimationTipsLayer:onEnter()
     self:RegisterHandler();
    self:createPnl();
    self:registerButtonEvent(BTNS);
    self:Init();
    -- CS.UnityHelper.NotchfitY(self.layer:Get("trans_container/img_shuiyin1"))
end

--按钮事件
function SublimationTipsLayer:onButtonClick(itype)
    if(itype == BTNS.BtnCloseLayer)then
       self:OnBtnCloseLayerClick();
    elseif(itype == BTNS.BtnSublimation)then 
       self:OnBtnSublimationClick();
    elseif(itype == BTNS.BtnReturn)then
        if(self._nextData == nil)then
            self:onBackClick();
        else
            self:OnBtnNextTipsClick();
        end
        GEvent:fireEventByEvt(EVENT_TYPE.SCRIPT_ACTION, EVENT_NAME.UPDATE_FAVOUR_DATA);
    elseif(itype == BTNS.BtnNextTips)then
       self:OnBtnNextTipsClick();
    else--@ButtonCallBackEnd
    end--RemoveEnd
end

--初始化
function SublimationTipsLayer:Init()
    local data = Player:GetSublimation();
    self._wipeArea = data.wipeArea;
    self:InitUI();
end

--初始化UI
function SublimationTipsLayer:InitUI()
    self._imgBody = self.layer:GetImageComponent("trans_container/img_body");
    self._imgBg = self.layer:GetImageComponent("trans_container/img_bg");
    self._imgSublimation = self.layer:GetImageComponent(BTNS.BtnSublimation);
    --@ImageEnd

    --@TextEnd

    self._transSublimation = self.layer:Get("trans_container/trans_sublimation");
    self._transScrub = self.layer:Get("trans_container/trans_scrub");
    self._transTipsBg = self.layer:Get("trans_container/trans_scrub/trans_tips_bg");
    self._transLockBack = self.layer:Get("trans_container/trans_lock_back");
    --@TransformEnd

    --@RectTransformEnd

    --@GameObjectEnd

    --@MToggleEnd

    --@MToggleCallBackEnd
end

--显示UI
function SublimationTipsLayer:show(heroId)
    self._heroId = heroId;
    self._hero = Hero:GetHero(heroId);
    self:SetUI();
    self:showLayer();
end

function SublimationTipsLayer:showLayer()
    if self._sublimation ~= nil then
        self:SetLvCostItems()
    end
    CBaseLayer.showLayer(self)
end

--退出按钮事件
function SublimationTipsLayer:onBackClick()
    self:onPopLayer();
end

function SublimationTipsLayer:onPerSecondUpdate()
    if(self._curScrubState == ScrubState.NotScrub)then
        --非擦除中
        return;
    elseif(self._curScrubState == ScrubState.ScrubOver)then
        --擦除结束,设置对话框
        self._scrubInfo.txtTimeTips:SetText(self._tipsShowTime);
        if(self._tipsShowTime < 0)then
            self._scrubInfo.txtTimeTips:SetText(LanguageMgr:GetTextByID(31027));
            self._scrubInfo.btnCloseLayer:SetVisible(true);
            self._curScrubState = ScrubState.NotScrub;
            Guide:ContinueGuideEvent(self.__cname)
        end
        self._tipsShowTime = self._tipsShowTime - 1;
    else
        if(self._isDrag)then
            --非拖拽
            return;
        end
        if(self._curCDTime < self._CDTime)then
            self._curCDTime = self._curCDTime + 1;
            if(self._curCDTime == self._CDTime)then
                --重新显示引导动画
                self._transTipsBg:SetVisible(true);
                self:playAni("SublimationScrubAnim");
            end
        end
    end
end
--释放
function SublimationTipsLayer:onExit()
    self._hero = nil;
    self._transSublimation = nil;
    self._transScrub = nil;
    self._transTipsBg = nil;
    self._sublimation = nil;
    self._scrubInfo = nil;
    self._imgSublimation = nil;
    self._imgBody = nil;
    self._transLockBack = nil;
    self._drops = nil;
    if self._inst ~= nil then
        Groble_SoundMgr:StopOnceEffect(self._inst)
    end
    if self._timerId ~= nil then
        Timer:RemoveTimerCall(self._timerId)
    end
    self._timerId = nil;
    self._inst = nil;
    self._imgBg = nil;
    self._nextData = nil;

    if self._uicostctrl ~= nil then
        self._uicostctrl:UICostCtrlDtor()
        self._uicostctrl = nil
    end
    --@CloseEnd
    CBaseLayer.onExit(self);
end

---------------------------------------------------------BtnClick------------------------------------------------------------------------------

function SublimationTipsLayer:OnBtnCloseLayerClick()
    GEvent:fireEventByEvt(EVENT_TYPE.SCRIPT_ACTION, EVENT_NAME.UPDATE_FAVOUR_DATA);
    Groble_UIMgr:ClickOnReturnBtn();
end
function SublimationTipsLayer:OnBtnSublimationClick()
    if(self._isLvUp)then
        Groble_UIMgr:ShowMessageBox(true, true,LanguageMgr:GetTextByID(31036),
            function()
                Hero:SublimationReq(self._heroId);
            end)
    else
        Groble_UIMgr:ShowGameWordTipsLayer(31035);
    end
end
function SublimationTipsLayer:OnBtnNextTipsClick()
    -- print("调用了OnBtnNextTipsClick")
    self:DoNext();
    if(self._nextData == nil)then
        if(self._drops ~= nil)then
            if(next(self._drops))then
                Bag:ShowDrops(self._drops,function ()
                    SingletonMgr:ShowFightingUpTipsLayer(Hero.ShowFightingUpType.One,0.2,self._heroId)
                    self:OnBtnCloseLayerClick();
                    Guide:RecoverGuide()
                end);
            else
                self:OnBtnCloseLayerClick();
            end
        else
            self:OnBtnCloseLayerClick();
        end
    end
end
--@ButtonFunctionEnd

---------------------------------------------------------TogClick------------------------------------------------------------------------------

--@MToggleFunctionEnd

------------------------------------------------------事件-----------------------------------------------------------------------

function SublimationTipsLayer:RegisterHandler()
    --self:addEventListener(EVENT_TYPE.DAY_UPDATE,self.__cname,function()

    --end);
    self:addEventListener(EVENT_TYPE.SCRIPT_ACTION,EVENT_NAME.SUBLIMATION_REP,
            function (data)
                if(data.state > 0)then
                    --升华完毕,播放特效
                    GEvent:fireEventByEvt(EVENT_TYPE.SCRIPT_ACTION, EVENT_NAME.FROST_VIEW,true);
                    Groble_UIMgr:ShowCommonEffectLayer(EFFECT_TYPE.SUBLIMATION, function ()
                        self._imgBg:SetEnabled(true);
                        self._drops = data.drops;
                        if(self._hero.config.Dialogue == "-1")then
                            if(next(self._drops))then
                                Bag:ShowDrops(self._drops,function ()
                                    SingletonMgr:ShowFightingUpTipsLayer(Hero.ShowFightingUpType.One,0.2,self._heroId);
                                    self:OnBtnCloseLayerClick();
                                end);
                            else
                                SingletonMgr:ShowFightingUpTipsLayer(Hero.ShowFightingUpType.One,0.2,self._heroId)
                                self:OnBtnCloseLayerClick();
                            end
                        else
                            self:SetLockBackUI();
                            Guide:RecoverGuide()
                        end
                        GEvent:fireEventByEvt(EVENT_TYPE.SCRIPT_ACTION, EVENT_NAME.FROST_VIEW,false);
                    end);
                end
            end)
end

------------------------------------------------------OtherFunction-----------------------------------------------------------------------

function SublimationTipsLayer:SetUI()
    local showScrub = false;
    if(self._hero.intimacy_data.raise == 0)then
        Hero:SublimationReq(self._heroId);
        --未激活升华,判断是否显示雾特效
        if(self._hero.config.Dialogue ~= "-1")then
            showScrub = true;
        end
    elseif(self._hero.intimacy_data.raise < 0)then
        --激活升华但没有升华
    else
        --升华完毕
    end

    self._scrubEraserMask = self.layer:Get("trans_container/EraserMask")
    self._transScrub:SetVisible(showScrub);
    self._transSublimation:SetVisible(not showScrub);
    self._transTipsBg:SetVisible(showScrub);
    self._scrubEraserMask:SetVisible(showScrub);
    if(showScrub)then--显示雾气
        self._imgBg:SetEnabled(true);
        self._scrubEraserMask:SetVisible(true);
        self._imgBody:SetEnabled(true);
        local imgData = lua_parse_cfg(self._hero.config.SublimationPic);
        --self._imgBg:LoadSprite(imgData[1][1]);
        local data = {};
        data[1] = imgData[2];
        data[2] = imgData[3];
        data[3] = imgData[4];
        self:SetBodyImage(self._imgBody,data);
        self._transLockBack:SetVisible(false);
        self:playAni("SublimationScrubAnim");
        self._curScrubState = ScrubState.Scrub;
        if(self._scrubInfo == nil)then
            self._scrubInfo = {};
            self._scrubInfo.transDialog = self.layer:Get("trans_container/trans_scrub/trans_dialog");
            self._scrubInfo.txtName = self._scrubInfo.transDialog:GetTextComponent("txt_name");
            self._scrubInfo.txtDialog = self._scrubInfo.transDialog:GetTextComponent("txt_dialog");
            self._scrubInfo.txtTimeTips = self._scrubInfo.transDialog:GetTextComponent("txt_time_tips");
            self._scrubInfo.btnCloseLayer = self._scrubInfo.transDialog:Get("btn_close_layer");
            self._scrubInfo.textureEraser = self.layer:Get("trans_container/trans_scrub/EraserMesh"):GetComponent("UIEraser");
            self._scrubInfo.transDialog:SetVisible(false);
            self._scrubInfo.textureEraser:Init(self._imgBody.sprite,self._hero.config.id)
            self._scrubInfo.textureEraser:AddDragAction(
                function ()
                    self:BeginDragAction();
                end,
                function ()
                    self:DragAction();
                end,
                function ()
                    self:EndDragAction();
                end);
        end
    else
        local bType = Hero:GetHeroIsSublimation(self._heroId);
        self._transLockBack:SetVisible(bType == Hero.SublimationBtnType.LockBack);
        self._transSublimation:SetVisible(bType == Hero.SublimationBtnType.Sublimation);
        self._imgBody:SetEnabled(bType ~= Hero.SublimationBtnType.Sublimation);
        if(bType == Hero.SublimationBtnType.Sublimation)then--升华
            self._imgBg:SetEnabled(false);
            self:InitSublimationUI();
            self:InitLockBackUI();
        else--回顾
            self._imgBg:SetEnabled(true);
            self:InitLockBackUI();
            self:SetLockBackUI(true);
        end
        Guide:ContinueGuideEvent(self.__cname)
    end
end

function SublimationTipsLayer:InitSublimationUI()
    --显示升华相关
    self._sublimation = {};
    self._sublimation.txtHeroName = self._transSublimation:GetTextComponent("info_level/text_name");
    self._sublimation.prefabHero = Bag:CtorComSimpleGoodsUi(self._transSublimation:Get("info_level/prefab_hero"),function () end);
    self._sublimation.prefabHero.isMain = true;
    --attr
    self._sublimation.attrCObjArr = CAttr:NewAttrObjArr(self._transSublimation:Get("info_attr"), 6);
    --消耗
    --奖励
    if(self._sublimation.awards == nil)then
        self._sublimation.awards = {};
        for i = 1, 5 do
            self._sublimation.awards[i] = Bag:CtorComSimpleGoodsUi(self._transSublimation:Get("trans_award_get/trans_award_bg/item_"..i));
        end
    end
    self:SetSublimationUI();
    -- self:SetLvCostItems();
    self:SetAwardItems();
end

function SublimationTipsLayer:SetSublimationUI()
    local cfg = Hero:GetCfg(self._heroId);
    self._sublimation.txtHeroName:SetText(cfg.Name);
    Bag:SetComSimpleGoodsUi(self._sublimation.prefabHero,Bag.TYPE_HERO,self._heroId);
    Hero:SetHeroAttr(self._sublimation.attrCObjArr, self._hero, true)
    local lvUpCfg = Hero:GetCurSublimationCfgByHeroId(self._heroId);
    local addAttr = {};
    for i, v in ipairs(lvUpCfg.lvUpAttrAdd) do
        if(addAttr[v[1]] == nil)then
            addAttr[v[1]] = 0;
        end
        addAttr[v[1]] = addAttr[v[1]] + v[2];
    end
    for i, cls in ipairs(self._sublimation.attrCObjArr) do
        CAttr:SetAddAttrCObj(cls, math.floor(addAttr[Hero.Attr6[i]] or 0));
    end
end

function SublimationTipsLayer:SetLvCostItems()
    local lvUpCosts = Hero:GetCurSublimationCfgByHeroId(self._heroId).RaiseUpCosts;
    if self._uicostctrl == nil then
        self._uicostctrl = UICostCtrl:new(self._transSublimation:Get("info_up/cost_bg"), 5)
    end
    local cfgId = self._uicostctrl:UpdateUICostCtrl(lvUpCosts)
    self._isLvUp = cfgId == 0
    if self._isLvUp then
        self._imgSublimation:SetImageColor(1,1,1,1);
    else
        self._imgSublimation:SetImageColor(110/255,110/255,110/255,1);
    end
end

function SublimationTipsLayer:SetAwardItems()
    local awards = Hero:GetCurSublimationCfgByHeroId(self._heroId).lvUpAward;
    for i, v in ipairs(self._sublimation.awards) do
        v.obj:SetVisible(awards[i] ~= nil);
        if(awards[i] ~= nil)then
            Bag:SetComSimpleGoodsUi(v,awards[i][1],awards[i][2],awards[i][3]);
        end
    end
end

function SublimationTipsLayer:InitLockBackUI()
    if(self._lockBack == nil)then
        self._lockBack = {};
        self._lockBack.txtName = self._transLockBack:GetTextComponent("trans_dialog/txt_name");
        self._lockBack.txtDialog = self._transLockBack:GetTextComponent("trans_dialog/txt_dialog");
        self._lockBack.txtNextTips = self._transLockBack:GetTextComponent("trans_dialog/txt_next_tips");
        self._lockBack.effect = self._transLockBack:Get("trans_effect"):GetComponent("ParticleBehaviour");
    end
end

function SublimationTipsLayer:SetLockBackUI(isLockBack)
    self._transLockBack:SetVisible(true);
    self._lockBack.effect:Stop();
    self._transSublimation:SetVisible(false);
    local temp = lua_parse_cfg(self._hero.config.Dialogue,true);
    self._nextData = {};
    if(isLockBack)then
        table.insert(self._nextData,temp[#temp]);
    else
        for i=#temp,1,-1 do
            table.insert(self._nextData,temp[i]);
        end
    end
    self:DoNext();
end

function SublimationTipsLayer:DoNext()
    if(self._nextData == nil)then
        return;
    end
    print(self._nextData)
    local curData = self._nextData[#self._nextData];
    if(#self._nextData == 1)then
        if(self._doNextIndex >=  #curData)then
            self._lockBack.txtNextTips:SetText(LanguageMgr:GetTextByID(31032));
        end
    end
    if(self._doNextIndex > #curData)then
        self._doNextIndex = 1;
        local remNum = #self._nextData;
        table.remove(self._nextData,remNum);
        if(#self._nextData == 0)then
            self._nextData = nil;
            curData = nil;
        else
            self._lockBack.effect:Play();
            curData = self._nextData[#self._nextData];
            local id = Timer:AddTimerCall(0.3,
                    function(rst)
                        self:SetNextData(curData);
                        Guide:RecoverGuide()
                    end)
            if(self._timerId == nil)then
                self._timerId = {};
            end
            self._timerId[id] = 1;
            return;
        end
    end
    self:SetNextData(curData);
end

function SublimationTipsLayer:SetNextData(curData)
    if(curData ~= nil)then
        local dId = curData[self._doNextIndex];
        if(dId~=nil) then
            local voiceCfg = Hero:GetDiaCfgByID(dId);
            self._lockBack.txtDialog:SetText(voiceCfg.dialogue);
            self._lockBack.txtName:SetText(self._hero.config.Name);
            if(self._curStr ~= voiceCfg.sublimation)then
                local imgData = lua_parse_cfg(voiceCfg.sublimation);
                local data = {};
                data[1] = imgData[1];
                data[2] = imgData[2];
                data[3] = imgData[3];
                self:SetBodyImage(self._imgBody,data);
                --"设置图片"
            end
            if curData[self._doNextIndex] ~= nil then
                print("是播放声音的ID:"..curData[self._doNextIndex])
                SoundMgr:StopOnceEffect(self._inst);
                self._inst =  Groble_SoundMgr:PlayByDiaID(curData[self._doNextIndex]);
            end
            self._doNextIndex = self._doNextIndex + 1;
        end
    end
end

function SublimationTipsLayer:SetBodyImage(img,data)
    img:SetEnabled(true);
    img:LoadSprite(data[1][1]);
    img:SetAnchoredPosition(tonumber(data[2][1]),tonumber(data[2][2]));
    img.transform:SetScale(tonumber(data[3][1]),tonumber(data[3][1]),tonumber(data[3][1]));
end

-----------------------------------------拖拽相关------------------------------------------
function SublimationTipsLayer:BeginDragAction()
    self._isDrag = true;
    self._transTipsBg:SetVisible(false);
end

function SublimationTipsLayer:DragAction()
    if(self._curScrubState == ScrubState.ScrubOver)then
        --擦除结束,不响应拖拽事件
        return;
    end
    -- print(self._scrubInfo.textureEraser.clearedPercent , self._wipeArea)
    if(self._scrubInfo.textureEraser.clearedPercent >= self._wipeArea)then
        self._curScrubState = ScrubState.ScrubOver;
        self._scrubInfo.transDialog:SetVisible(true);
        self._scrubInfo.btnCloseLayer:SetVisible(false);
        self._scrubInfo.textureEraser.canClear = false;
        self._scrubInfo.txtTimeTips:SetText(self._tipsShowTime);
        self._scrubEraserMask:SetVisible(false)
        if self._hero.config.GlassDialogue ~= "-1" then
            local dialogue = Hero:GetDiaCfgByID(self._hero.config.GlassDialogue);
            self._scrubInfo.txtName:SetText(self._hero.config.Name);
            self._scrubInfo.txtDialog:SetText(dialogue.dialogue);
            self._inst =  Groble_SoundMgr:PlayByDiaID(self._hero.config.GlassDialogue);
        end
    end
end

function SublimationTipsLayer:EndDragAction()
    self._isDrag = false;
    self._curCDTime = 0;
end
--------------------------------------------------------------------------------------------

return SublimationTipsLayer;
