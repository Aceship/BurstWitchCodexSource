---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/10/22 11:28
---

local CBaseLayer = core.require("xlua/lua_UI/UIBaseLayer.txt")
local EquipCircleLayer = class("EquipCircleLayer", CBaseLayer)

local Attr   = {
    CAttr.TYPE_HP,
    CAttr.TYPE_ATK,
    CAttr.TYPE_DEF,
    CAttr.TYPE_HIT,
    CAttr.TYPE_DMG,
}

function EquipCircleLayer:ctor(super, ui_parent)
    CBaseLayer.ctor(self)
    self._prefab = {
        path = "prefab_uiEquip/UI_EquipCircleLayer",
        trans = ui_parent,
        obj = true,
    }
    self._fading = false;
    self:onEnter()
end

function EquipCircleLayer:initObj()
    self._click_equip_obj   = self.layer:Get("effects/UI19_dianji_02") -- 装备之后提示
    self._click_equip_com   = self._click_equip_obj:Get("p_dianji"):GetComponent("ParticleSystem")
    self._click_effectObj   = self.layer:Get("effects/UI19_dianji_01") -- 普通点击
    self._click_effectCom   = self._click_effectObj:Get("Particle_G3 (1)"):GetComponent("ParticleSystem")
    self._select_effectObj  = self.layer:Get("effects/UI20_xunh02")
    self._select_effectCom  = self._select_effectObj:Get("Particle Systemlyan"):GetComponent("ParticleSystem")

    self._iconCom           = self.layer:GetImageComponent("image_icon")
    self._headCom           = self.layer:GetImageComponent("fazhen/img_hero")
    self._basicObj          = self.layer:Get("info_basic")
    self.imgEmpty           = self.layer:Get("info_empty")
    self.suitTips           = self.layer:Get("suit_tips");
    self._equipsObj         = {}
    self._equipSpineArr     = {}
    self.img_menu           = self.layer:Get("img_menu");
    self.menuHide           = nil
    self.menuFX1            = nil
    self.menuFX2            = nil
    self.menuFX3            = nil

    self._propObj           = self.layer:Get("info_prop")
    self._tagImg            = self._propObj:GetImageComponent("img_tag")
    self._tagText           = self._propObj:GetTextComponent("img_tag/txt_tag")

    for _, v in ipairs(Equip.TYPES) do
        local obj = self.layer:Get("prefab_equip_" .. v)
        local cls           = clsbase:new(obj)
        local isOpen = false

        cls.icon        = cls.transform:Get("img_icon")
        cls.redCom      = cls.transform:GetImageComponent("img_red_tips")
        cls.effect      = cls.transform:Get("effect")
      --  cls.selectObj   = cls:Get("image_select")
        cls.imgAddObj   = cls.transform:Get("img_add")
        cls.imgLockObj  = cls.transform:Get("img_lock");
        cls.fsBorderCom = cls:GetImageComponent("img_fsborder")
        cls.objLv       = cls.transform:Get("img_lv_bg");
        cls.txtLv       = cls.objLv:GetTextComponent("tet_lv")
        isOpen = Player:IsSysFuncOpen(Player.SYS_FUNC.equip_fs)
        if(cls.effect ~= nil)then
            set_obj_active(cls.effect,false);
        end
        set_obj_active(cls.imgAddObj, isOpen)
        set_obj_active(cls.imgLockObj, not isOpen)
        cls.uid = 0
        self._equipsObj[v]  = cls
    end

    self._belongArr         = Equip:InitBelongTypes(self.layer:Get("info_basic"))
    self._attrCObjArr       = CAttr:NewAttrObjArr(self.layer:Get("info_basic"), 5)
    -- self._showAttr          = false

    self.suitTipsAnimCtrl   = UIController:CtorBaseAnimator(self.suitTips);
    self.suitTipsAnimCtrl._KeyFrameCall = function()
        set_obj_active(self.suitTips,false);
        SingletonMgr:ShowFightingUpTipsLayer(Hero.ShowFightingUpType.One,0.1,self._hero.id);
    end

    -- 强化
    self.layer:GetButtonComponent("img_menu/img_add"):AddButtonListener(function()
        if self._equipType ~= -1 then
            local equipuid = self._hero.equipids[self._equipType]
            if equipuid ~= 0 then
                core.require("xlua/lua_UI/UIEquip/EquipIntensifyLayer.txt"):new(equipuid):show(function()
                    self:refreshLayer(self._equipType)
                end)
            end
        else
            Groble_UIMgr:ShowGameWordTipsLayer(72000063)
        end
    end)

    -- 更换
    self.layer:GetButtonComponent("img_menu/img_change"):AddButtonListener(function()
        self:goToChange(self._equipType)
    end)

    -- 卸载
    self.layer:GetButtonComponent("img_menu/img_unload"):AddButtonListener(function()
        if(self._hero.equipids[self._equipType] == nil or self._hero.equipids[self._equipType] <= 0)then
            Groble_UIMgr:ShowTipsLayer(LanguageMgr:GetTextByID(72000080));
            return;
        end
        Equip:UndressReq({self._hero.equipids[self._equipType]}, false)
    end)

    self.layer:GetButtonComponent("btn_click"):AddButtonListener(function()
        self:showAttr(true)
        self.menu:showAttr(true)
        self:setMenuActive(false)
    end)

    local function ChangeHero()
        core.require("xlua/lua_UI/UIEquip/EquipHeroLayer.txt"):new():show(self._heroid, function(heroid)
            self.menu:doUpdateHero(heroid) -- TODO
            self:doUpdateHero(heroid)
        end)
    end
    self.layer:GetButtonComponent("fazhen/img_hero"):AddButtonListener(function()
        ChangeHero()
    end)
    self.layer:GetButtonComponent("fazhen/btn_hero"):AddButtonListener(function()
        ChangeHero()
    end)
end

function EquipCircleLayer:onEnter()

    self:createPnl()
    self:initObj()
    for _, v in ipairs(Equip.TYPES) do
        self.layer:GetButtonComponent("prefab_equip_" .. v):AddButtonListener(function()
            self:onEquipClick(v)
        end)
    end

    self:addRedTipsListener()

    self:addEventListener(EVENT_TYPE.HERO_EQUIP_UI, self.__cname, function(arr)
        local index = nil;
        if(arr ~= nil)then
            if(arr == true)then
                UIMgr:ShowTipsLayer(LanguageMgr:GetTextByID(72000082));
                self:refreshLayer(nil, true)
                return
            end
            index = arr.index;
        else
            self:refreshLayer(nil, true)
            self:setMenuActive(false);
            return
        end
        self:refreshLayer(index, true)
        if(not arr.isUpdate)then
            return;
        end
        if(index == nil)then
            UIMgr:ShowTipsLayer(LanguageMgr:GetTextByID(72000081))
            local isShow;
            for i, v in ipairs(self._hero.equipids) do
                local equip = Equip:GetEquip(v)
                if(equip ~= nil)then
                    if(equip.suitid > 0 and equip.suitid ~= nil)then
                        isShow = Equip:GetEquipSuitIsShow(equip.suitid,self._hero.id,true);
                        if(isShow)then
                            self:SetSuitEffect(equip,true);
                            break;
                        end
                    end
                end
            end
            return;
        end
        local datas = Equip:GetFitEquip(self._hero, index)
        if #datas <= 0 then
            return;
        end
        local equip = Equip:GetEquip(self._hero.equipids[self._equipType])
        if(equip == nil)then
            return;
        end
        if(equip.suitid <= 0 or equip.suitid == nil)then
            return;
        end
        local isShow = Equip:GetEquipSuitIsShow(equip.suitid,self._hero.id);
        local showTips = true;
        if(isShow)then
            self:SetSuitEffect(equip,showTips);
        end
    end)

    CS.UnityHelper.NotchfitY(self.layer:Get("info_basic"))
    CS.UnityHelper.NotchfitY(self.layer:Get("info_prop"))
end

function EquipCircleLayer:SetSuitEffect(equip, showTips)
    for i, v in ipairs(self._hero.equipids) do
        if(v ~= 0)then
            local tempEquip = Equip:GetEquip(v)
            if(tempEquip.suitid == equip.suitid)then
                if(self._equipsObj[i].effect ~= nil)then
                    if(showTips)then
                        -- set_obj_active(self.suitTips,true);
                        -- self.menu:SetSuitEffect()
                        showTips = false;
                    end
                    set_obj_active(self._equipsObj[i].effect,false);
                    set_obj_active(self._equipsObj[i].effect,true);
                end
            end
        end
    end
end

function EquipCircleLayer:show(heroid, menu)
    self.menu = menu
    self._fading = false
    self:doUpdateHero(heroid, true)
    set_obj_active(self._select_effectObj,false);

    self._click_effectCom:Stop()
    self._click_equip_com:Stop()
    self._select_effectCom:Stop()

    self:showLayer()
    self:playAni("EquipLayerSuitFadeIn1")
    self.layer:DelayCall(0.5, function()
        self:onLayerFadeInEndCall()
    end)
end

function EquipCircleLayer:doUpdateHero(heroid, enable)
    self.showEmptyImg = true;
    self._heorid = heroid
    self._hero = Hero:GetHero(heroid)
    self._equipType = Equip:GetDefaultType(self._hero)
    for _, v in ipairs(self._hero.equipids) do
        if(self._equipsObj[_].effect ~= nil)then
            set_obj_active(self._equipsObj[_].effect,false);
        end
        self._equipsObj[_].transform.localScale = CS.UnityEngine.Vector3.zero;
        local dt = self._equipsObj[_].transform:DOScale(1,0.3):SetDelay(0.08*_);
        if((self._equipType ~= -1))then
            if(_ == self._equipType)then
                dt:OnComplete(function ()
                    set_obj_active(self._select_effectObj,true)
                end)
            end
        end
    end

    self._headCom.sprite = AssetLoader:LoadSprite("source_icon/player/player_icon_"..heroid)

    for _, v in ipairs(Equip.TYPES) do
        self:initEquipInfo(v)
    end
    self:onUpdateRedTips()
    self:setSelEffect()
    self:setEmptyEquip(false)
    self:showAttr(true, enable)
    self.menu:showAttr(true)
    self:setMenuActive(false)
end

function EquipCircleLayer:initEquipInfo(index)
    local cls = self._equipsObj[index]
    local equip = nil;
    equip = Equip:GetEquip(self._hero.equipids[index])
    local empty = equip == nil
    if(self.showEmptyImg == true)then
        self.showEmptyImg = empty;
    end
    if self._equipSpineArr[index] ~= nil then
        u3d_destory_obj(self._equipSpineArr[index])
        self._equipSpineArr[index] = nil
    end
   -- set_obj_active(cls.imgLockObj,equip ~= nil and equip.lock == Equip.EquipLockStart.Lock);
    cls.icon:SetVisible(not empty)
    cls.objLv:SetVisible(not empty)
    cls.fsBorderCom.gameObject:SetVisible(not empty)
    if not empty then
       -- Equip:SetEquipCObjByUid(cls.clsequip, equip.uid, true)
        local cfg = Equip:GetCfg(equip.cfgid)
        Equip:SetIconUi(cls.icon, cfg.FSicon)
        Equip:SetFSBorder(cls.fsBorderCom, cfg.itemPath)
        cls.txtLv:SetText(string.format("+%d", equip.level))

        local spineName = "none"
        if tonumber(cfg.Quality) == Bag.QLTY_SSR then
            spineName = "ssr"
        elseif tonumber(cfg.Quality) == Bag.QLTY_SR then
            spineName = "sr"
        end
        if spineName ~= "none" then
            local equipSpine = Equip:SetSpine(cls.fsBorderCom.gameObject, "equip_" .. spineName .. index)
            self._equipSpineArr[index] = equipSpine
        end
    end
end

function EquipCircleLayer:onUpdateRedTips()
    -- set_obj_active(self.equipChangeRed,Equip:GetBestOneEquip(self._hero,self._equipType,self._hero.equipids[self._equipType]) > 0);
    -- TODO 界面被关掉了, 但是不知道为什么会走到这,
    if not self._equipsObj then
        return
    end
    for slot, uid in ipairs(self._hero.equipids) do
        local betteruid = Equip:GetBestOneEquip(self._hero, slot, uid)
        set_com_enabled(self._equipsObj[slot].redCom, betteruid ~= 0)
    end
end

function EquipCircleLayer:setSelEffect()
    local cls
    for _, v in ipairs(Equip.TYPES) do
        cls = self._equipsObj[v]
    end
    if self._equipType ~= -1 then
        self._select_effectObj:SetParent(self._equipsObj[self._equipType].obj)
        u3d_set_localPos(self._select_effectObj, 0, 0)
        set_obj_active(self._select_effectObj, true)
        if self._select_effectCom.isStopped then
            self._select_effectCom:Play()
        end
    else
        self._select_effectCom:Stop()
        set_obj_active(self._select_effectObj, false)
    end
end

function EquipCircleLayer:setEmptyEquip(empty)

    -- local notempty = empty or self._equipType ~= -1
    -- set_com_enabled(self._iconCom, notempty)
    -- set_obj_active(self._basicObj, notempty)
    -- set_obj_active(self._propObj, notempty)
end

function EquipCircleLayer:showAttr(show, enable)
    local changed
    if show ~= self._showAttr then
        self._showAttr = show
        changed = true
    end

    local active = not show
    if enable then
        active = false
    end

    self._basicObj:SetVisible(active)
    self._propObj:SetVisible(active)
    self._iconCom.gameObject:SetVisible(active)
    self._select_effectObj:SetVisible(active)
    if self._hero.equipids[self._equipType] then
        local equip = Equip:GetEquip(self._hero.equipids[self._equipType])
        if equip then
            Equip:SetEquipTag(equip.suitid, self._tagImg, self._tagText)
        end
    end

    if enable then
        return
    end

    -- debuglog(346, show, changed)
    if show then
        if changed then
            self:playAni("EquipLayerSuitFadeIn1");
        end
    else
        if changed then
            self:playAni("EquipLayerSuitFadeOut");
        end
    end
end

function EquipCircleLayer:onEquipClick(itype)

    if not  Groble_UIMgr:ShowUnlockTipsLayer(Player.SYS_FUNC.equip_fs) then return end
    if self._hero.equipids[itype] == 0 then
            self:goToChange(itype)
        return
    end
    self:showAttr(false)
    self.menu:showAttr(false)
    self._equipType = itype
    self._click_effectObj:SetParent(self._equipsObj[self._equipType].obj)
    u3d_set_localPos(self._click_effectObj, 0, -14)
    self._click_effectCom:Play()
    self:setSelEffect()
    self:setCurEquipInfo()

    self.img_menu:SetParent(self._equipsObj[self._equipType].obj)
    self.img_menu:SetPosition(2, -132, 0, true)
    self:setMenuActive(true)
    self.img_menu:SetScale(1, 1, 1, true)
    if not self.menuHide then
        self.menuFX1 = self.img_menu:Get("img_add/effect/UI20_xunh(Clone)/p_xunh/Particle Systemlyan")
        self.menuFX2 = self.img_menu:Get("img_change/effect/UI20_xunh(Clone)/p_xunh/Particle Systemlyan")
        self.menuFX3 = self.img_menu:Get("img_unload/effect/UI20_xunh(Clone)/p_xunh/Particle Systemlyan")
        if self.menuFX1 then
            self.menuHide = true
            self.menuFX1:SetVisible(false)
        end
        if self.menuFX2 then
            self.menuHide = true
            self.menuFX2:SetVisible(false)
        end
        if self.menuFX3 then
            self.menuHide = true
            self.menuFX3:SetVisible(false)
        end
    end
end

function EquipCircleLayer:onEquipOn(pos)
    self._click_equip_obj:SetParent(self._equipsObj[pos].obj)
    self._click_equip_obj:SetPosition(4, -12, 0, true)

    self.layer:DelayCall(0.5, function()
        self._click_equip_com:Play()
    end)

    self:setMenuActive(false)
end

function EquipCircleLayer:goToChange(itype)
    local datas = Equip:GetFitEquip(self._hero, itype)
    if #datas > 0 then
        self._equipType = itype
        local param = nil
        if(itype ~= nil)then
            local datas = Equip:GetFitEquip(self._hero, itype)
            param = {itype, datas}
        else
            local datas = Equip:GetFitEquip(self._hero, self._equipType)
            param = {self._equipType, datas}
        end
        self.menu:setTogOn(2, param, true)    -- TODO
    else
        Groble_UIMgr:ShowGameWordTipsLayer(72000074)
    end
end

function EquipCircleLayer:setCurEquipInfo()
    local equip = Equip:GetEquip(self._hero.equipids[self._equipType])
    local cfg = Equip:GetCfg(equip.cfgid)
    -- name
    if(self.txtLevel == nil)then
        self.txtLevel = self.layer:GetTextComponent("info_basic/text_level")
        self.txtName = self.layer:GetTextComponent("info_basic/text_name")
        self.imgIconObj = self.layer:Get("image_icon")
        self.imgQltyObj = self.layer:Get("info_basic/image_qlty")
    end
    self.txtName.text = cfg.Name
    -- icon
    Equip:SetIconUi( self.imgIconObj, cfg.FSicon)
    -- qlty
    Hero:SetHeroQlty(  self.imgQltyObj , equip.qlty)
    -- attrs
    Equip:SetEquipAttr(self._attrCObjArr, equip, true)
    -- level
    self.txtLevel.text = equip.level
    -- skill or suit
    if(self.equipProp == nil)then
        self.equipProp = Equip:NewEquipProp(self._propObj:Find("view_port/content"));
    end
    Equip:SetEquipProp(self.equipProp, equip,true)
    -- belong attr
   -- Equip:EquipBelongTypes(self._belongArr, equip.cfgid)
end

function EquipCircleLayer:refreshLayer(index, param)
    self.showEmptyImg = true;
    if index ~= nil then
        if self._hero.equipids[index] ~= 0 then
            self._equipType = index
        else
            self._equipType = Equip:GetDefaultType(self._hero)
        end
    else
        self._equipType = Equip:GetDefaultType(self._hero)
    end

    for _, v in ipairs(Equip.TYPES) do
        self:initEquipInfo(v)
    end
    self:onUpdateRedTips()
    self:setSelEffect()
    self:setEmptyEquip()
    if self._equipType ~= -1 and not param then
        self:onEquipClick(self._equipType)
    end
end


function EquipCircleLayer:onLayerFadeInEndCall()
    Guide:ContinueGuideEvent(self.__cname)
end

function EquipCircleLayer:onToggleChage()
    self._showAttr = true
    self:hideLayer()
end

function EquipCircleLayer:setMenuActive(active)
    self.img_menu:SetVisible(active)
end

function EquipCircleLayer:setInfoActive()
    self._basicObj:SetVisible(false)
    self._propObj:SetVisible(false)
end

function EquipCircleLayer:onExit()

    if self.menuFX1 then
        self.menuFX1:SetVisible(true)
        self.menuFX1 = nil
    end
    if self.menuFX2 then
        self.menuFX2:SetVisible(true)
        self.menuFX2 = nil
    end
    if self.menuFX3 then
        self.menuFX3:SetVisible(true)
        self.menuFX3 = nil
    end

    if self._click_effectCom then
        self._click_effectCom:Stop()
        self._click_effectObj = nil
        self._click_effectCom = nil
    end

    if self._click_equip_com then
        self._click_equip_com:Stop()
        self._click_equip_obj = nil
        self._click_equip_com = nil
    end

    self._select_effectObj  = nil
    self._select_effectCom  = nil
    self._iconCom           = nil
    self._headCom           = nil
    self._basicObj          = nil
    self.imgEmpty           = nil
    self.suitTips           = nil
    self._equipsObj         = nil
    self.img_menu           = nil
    self._propObj           = nil
    self._tagImg            = nil
    self._tagText           = nil
    self._belongArr         = nil
    self._attrCObjArr       = nil
    self.suitTipsAnimCtrl   = nil
    self.menu               = nil
    self.txtLevel           = nil
    self.txtName            = nil
    self.imgIconObj         = nil
    self.imgQltyObj         = nil
    self.menuHide          = nil
end

return EquipCircleLayer

