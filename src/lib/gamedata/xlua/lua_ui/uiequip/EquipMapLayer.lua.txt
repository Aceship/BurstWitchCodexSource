---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/9/6 11:44
local CBaseLayer = core.require("xlua/lua_UI/UIBaseLayer.txt")
local EquipMapLayer = class("EquipMapLayer", CBaseLayer)
--按钮
local BTNS = {

}
local togType = {
    all = 0,
    N = 1,
    R = 2,
    SR = 3,
    SSR = 4,
};
--构造函数
function EquipMapLayer:ctor(super)
    CBaseLayer.ctor(self)
    self._prefab = {
        path = "prefab_uiEquip/UI_EquipMapNewLayer",
    }
    self._fading = false;
    self._topData = {
        showBtnBack     = true,
        showPlayerInfo  = false,
        showTopInfo     = false,
        topInfo        = {},

    }
    self._bgData = {
        showEffect = false,
        bgType = BackBgPath.BG_DEF,
    }
    self._hideOtherLayer = true;
    self._addStack = true;
    self._addStack = true;
    self:onEnter()
end


--进入Ui调用一次
function EquipMapLayer:onEnter()
    self:createPnl();
    self:registerButtonEvent(BTNS);
    self:Init();
end

--退出按钮事件
function EquipMapLayer:onBackClick()
    if(self.callback)then
        self:callback();
    end
    self:onPopLayer();
end

--初始化
function EquipMapLayer:Init()
    self.data = {};
    self.callback = nil;
    self.items = {};
    self.selectEquipType = nil;
    self.txtTitle = self.layer:GetTextComponent("info_title/txt_title");
    self.txtTitleE = self.layer:GetTextComponent("info_title/txt_title_E");
    --[[self.togAll = self.layer:GetToggleComponent("bottomToggleGroup/toggle_0");
    self.togAll.onValueChanged:AddListener(function (isOn)
        if(isOn)then
            self:OnBottomTogClick(togType.all)
        end
    end);
    self.togN = self.layer:GetToggleComponent("bottomToggleGroup/toggle_1");
    self.togN.onValueChanged:AddListener(function (isOn)
        if(isOn)then
            self:OnBottomTogClick(togType.N)
        end
    end);
    self.togR = self.layer:GetToggleComponent("bottomToggleGroup/toggle_2");
    self.togR.onValueChanged:AddListener(function (isOn)
        if(isOn)then
            self:OnBottomTogClick(togType.R)
        end
    end);
    self.togSR = self.layer:GetToggleComponent("bottomToggleGroup/toggle_3");
    self.togSR.onValueChanged:AddListener(function (isOn)
        if(isOn)then
            self:OnBottomTogClick(togType.SR)
        end
    end);
    self.togSSR = self.layer:GetToggleComponent("bottomToggleGroup/toggle_4");
    self.togSSR.onValueChanged:AddListener(function (isOn)
        if(isOn)then
            self:OnBottomTogClick(togType.SSR)
        end
    end);]]--

end


--显示UI
function EquipMapLayer:show(callback)
    self.callback = callback;
  --  self.togRunes.isOn = true;
    self:OnSelectEquipTogClick(Bag.SHOW_TYPE_RUNE);
    self:showLayer();
end

function EquipMapLayer:OnSelectEquipTogClick(selectType)
    if(self.selectEquipType == selectType)then
        return;
    end
    self.selectEquipType = selectType;
    self.selectQualityType = togType.N;
    if(self.selectEquipType == Bag.SHOW_TYPE_RUNE)then
        self.data = Equip:GetSuitDataByQuality(self.selectQualityType);
        self.txtTitle:SetTextById(72000095);
        self.txtTitleE:SetTextById(72000096);
    end
    self:InitUI();
    --self.togAll.isOn = true;
end

function EquipMapLayer:OnBottomTogClick(selectType)
    if(self.selectQualityType == selectType)then
        return;
    end
    self.selectQualityType = selectType
    if(self.selectEquipType == Bag.SHOW_TYPE_RUNE)then
        self.data = Equip:GetSuitDataByQuality(selectType);
    end
    self:InitUI();
end

--初始化
function EquipMapLayer:InitUI()
    local rows = #self.data;
    if(self._tvController == nil)then
        self._tvController  = UIController:CtorTableView(self.layer.transform:Find("TableViewController"))
        self._tvController:Init(rows, true,
                function(cell, row)
                    self:UpdateTVData(cell, row)
                end, 0.3, 0.1)
    else
        self._tvController:Reload(rows,true)
        self._tvController:ScrollToTop()
    end
end

function EquipMapLayer:UpdateTVData(cell, row)
    if(self.items[cell] == nil)then
        self.items[cell] = self:NewItem(cell.transform)
    end
    self:SetItem(self.items[cell],self.data[row + 1]);
end

function EquipMapLayer:NewItem(trans)
    local cls = clsbase:new(trans);
    cls.uiRunes = self:NewSuitItem(trans:Find("runes_ui"));
    cls.txtName = cls:GetTextComponent("txt_suit_name");
    cls.imgTag  = cls:GetImageComponent("img_tag")
    cls.txtTag  = cls:GetTextComponent("img_tag/txt_tag")
    --cls.txtQuality = cls:GetTextComponent("txt_quality");
    return cls;
end

function EquipMapLayer:SetItem(cls, data)
    if(data.name == nil)then
        data.name = data.Name;
    end
    if(data.quality == nil)then
        data.quality = tonumber(data.Quality);
    end
    cls.txtName.text = data.name
    Equip:SetEquipTag(data.suitid, cls.imgTag, cls.txtTag)
    --cls.txtQuality.text = uistr.com_qltystr[data.quality];
    set_obj_active(cls.uiRunes.transform,self.selectEquipType == Bag.SHOW_TYPE_RUNE);
    if(self.selectEquipType == Bag.SHOW_TYPE_RUNE)then
        self:SetSuitItem(cls.uiRunes,data);
    end
end

function EquipMapLayer:NewSuitItem(trans)
    local cls = clsbase:new(trans);
    cls.items = {};
    for i = 1, 6 do
        cls.items[i] = Bag:CtorComSimpleGoodsUi(cls:Find("item_"..i),function(cls,cfgid)
            Groble_UIMgr:ShowOriginTipsLayer(OriginTipsType.Item,cfgid, Bag.TYPE_EQUIP)
        end);
        --cls.items[i].notHave = cls.items[i].transform:Find("img_not_get");
    end
    cls.rect = cls.transform:GetComponent("RectTransform");
    cls.rectV2 = cls.rect.sizeDelta;

    cls.bottomUI = cls.transform:Find("bottom_ui");
    cls.suitDes = {};
    cls.notSuit = cls:Find("txt_not_suit");
    for i = 1, 2 do
        cls.suitDes[i] = {};
        cls.suitDes[i].rect = cls:Find("bottom_ui/item_"..i):GetComponent("RectTransform");
        cls.suitDes[i].rectV2 = cls.suitDes[i].rect.sizeDelta;
        cls.suitDes[i].txtDes = cls:GetTextComponent("bottom_ui/item_"..i.."/txt_content");
        cls.suitDes[i].rectDes = cls.suitDes[i].txtDes.transform:GetComponent("RectTransform");
        cls.suitDes[i].desV2 = cls.suitDes[i].rectDes.sizeDelta;
    end
    return cls;
end

function EquipMapLayer:SetSuitItem(cls, data)
    local num = 0;
    for i, v in ipairs(cls.items) do
        --num = Equip:GetCount(data.equipids[i])
        Bag:SetComSimpleGoodsUi(v,Bag.TYPE_EQUIP,data.equipids[i],num,true)
        --set_obj_active(v.notHave,num == 0)
    end
    local deskillcfg;
    local suitCfg = Equip:GetEquipSuitCfg(data.suits[1].cfgid);
    set_obj_active(cls.bottomUI,suitCfg.skill ~= "0");
    set_obj_active(cls.notSuit,suitCfg.skill == "0");
    if(suitCfg.skill ~= "0")then
        for i, v in ipairs(cls.suitDes) do
            suitCfg = Equip:GetEquipSuitCfg(data.suits[i].cfgid);
            set_obj_active(v.rect.transform,suitCfg.skill ~= "0");
            if(suitCfg.skill ~= "0")then
                deskillcfg = Skill:GetCfgByTypeIdStr(suitCfg.skill);
                if deskillcfg and deskillcfg then
                    v.txtDes.text = lua_color_str(deskillcfg.desc)
                else
                    v.txtDes.text = ""
                end
                v.desV2.y = v.txtDes.preferredHeight;
                v.rectDes.sizeDelta = v.desV2;
                v.rectV2.y = v.txtDes.preferredHeight;
                v.rect.sizeDelta = v.rectV2;
            end
        end
    end
end

return EquipMapLayer;
