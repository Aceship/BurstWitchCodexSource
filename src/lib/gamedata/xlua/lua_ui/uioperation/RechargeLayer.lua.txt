---
--- @Author:Administrator
--- @Create Time:2020-11-30 10:41:19
---
local CBaseLayer = core.require("xlua/lua_UI/UIBaseLayer.txt")
local RechargeLayer = class("RechargeLayer", CBaseLayer)
--按钮
local BTNS = {
--@ButtonEnd
}
--构造函数
function RechargeLayer:ctor(super,parent)
    CBaseLayer.ctor(self)
    self._prefab = {
        path = "prefab_uiOperation/UI_RechargeLayer",
        trans = parent,
        obj = true
    }
    self._fading = false;
    self:onEnter();
end


--进入Ui调用一次
function RechargeLayer:onEnter()
     self:RegisterHandler();
    self:createPnl();
    self:registerButtonEvent(BTNS);
    self:Init();
end

--按钮事件
function RechargeLayer:onButtonClick(itype)
    --@ButtonCallBackEnd
end

--初始化
function RechargeLayer:Init()
    self._chargeIds = Operation:GetCurChargeIds();
    self:InitUI();
end

--初始化UI
function RechargeLayer:InitUI()

	--@ImageEnd

	--@TextEnd

	self._transTableviewcontroller = self.layer:Get("trans_container/trans_TableViewController");
	--@TransformEnd

	--@RectTransformEnd

	--@GameObjectEnd

	--@MToggleEnd

	--@MToggleCallBackEnd
end

--显示UI
function RechargeLayer:show()
    self:SetTableView();
    self:showLayer();
end

--退出按钮事件
function RechargeLayer:onBackClick()
    self:onPopLayer();
end

--释放
function RechargeLayer:onExit()

	self._transTableviewcontroller = nil;
	--@CloseEnd
    CBaseLayer.onExit(self);
end

---------------------------------------------------------BtnClick------------------------------------------------------------------------------

function RechargeLayer:OnItemBtnClick(cfg)
    Operation:SendMessage(Operation.ActivityID.WitchCoin,{id = cfg.cfgid,num = 1});
end

--@ButtonFunctionEnd

---------------------------------------------------------TogClick------------------------------------------------------------------------------

--@MToggleFunctionEnd

------------------------------------------------------事件-----------------------------------------------------------------------

function RechargeLayer:RegisterHandler()
    self:addEventListener(EVENT_TYPE.UPDATE_GIFT_BAG,self.__cname,function()
        self:SetTableView();
    end);
end

------------------------------------------------------OtherFunction-----------------------------------------------------------------------

local RowNum = 3;
function RechargeLayer:SetTableView()
    local row = math.ceil(#self._chargeIds / RowNum);
    if(self._tvController == nil)then
        self._tvController  = UIController:CtorTableView(self._transTableviewcontroller)
        self._tvController:Init(row, true,
                function(cell, row)
                    self:SetCell(cell, row + 1)
                end, 0.3, 0.1)
    else
        self._tvController:ScrollToTop();
        self._tvController:Reload(row,true);
    end
end

function RechargeLayer:SetCell(cell, row)
    if(self._cells == nil)then
        self._cells = {};
    end
    if(self._cells[cell] == nil)then
        self._cells[cell] = self:NewCell(cell);
    end
    self:SetCellData(self._cells[cell],row);
end

function RechargeLayer:NewCell(trans)
    local cell = clsbase:new(trans);
    cell.items = {};
    for i = 1, RowNum do
        local cls = clsbase:new(cell:Find("item_"..i));
        cls.imgBg = cls:GetImageComponent("img_bg");
        cls.hasMonthFirst = cls:Find("has_month_first")
        cls.transMonthFirst = cls:Find("trans_month_first");
        cls.txtMonthFirstNum = cls:GetTextComponent("trans_month_first/txt_num");
        cls.imgMonthFirstIcon = cls:GetImageComponent("trans_month_first/img_icon");
        cls.imgIcon = cls:GetImageComponent("img_icon");
        cls.txtNum = cls:GetTextComponent("txt_num");
        cls.txtPrice = cls:GetTextComponent("txt_price");
        cls.txtHasNum = cls.hasMonthFirst:GetTextComponent("txt_has_num");
        cls.btn = cls.transform:GetComponent("Button");
        cls.btn.onClick:AddListener(function ()
            self:OnItemBtnClick(cls.charge);
        end);
        cell.items[i] = cls;
    end
    return cell;
end

function RechargeLayer:SetCellData(cell, row)
    local index = 0;
    for i, cls in ipairs(cell.items) do
        index = i + RowNum * (row - 1);
        if(self._chargeIds[index] == nil)then
            cls.obj:SetVisible(false);
            return;
        end
        cls.obj:SetVisible(true);
        cls.charge = Recharge:GetData(self._chargeIds[index]);
        cls.data = Recharge:GetRechargeMoneyCfg(cls.charge.chargeMoneyId);
        local flg = cls.charge.monthFirst ~= -1 and not Operation:GetFirstsStartById(self._chargeIds[index])
        cls.transMonthFirst:SetVisible(flg);
        cls.hasMonthFirst:SetVisible(not flg and cls.charge.extras ~= -1);
        local getNum = 0;
        if(cls.charge.extras ~= -1)then
            getNum = cls.charge.extras[1][3];
        end
        if(flg)then
            getNum = cls.charge.monthFirst[1][3] + getNum;
            cls.txtMonthFirstNum:SetText(getNum);
            cls.imgMonthFirstIcon.sprite = Item:LoadSprite(cls.charge.monthFirst[1][2]);
        else
            cls.txtHasNum:SetText(getNum);
        end
        cls.imgIcon:LoadSprite(cls.data.icon);
        cls.txtNum.text = cls.data.goods[3];
        if GameSdkMgr:IsIssueJuren() then
            local _currency = GameSdkMgr:GetCurrency()
            if _currency == "CNY" then
                cls.txtPrice.text = cls.data.price
            elseif _currency == "TWD" then
                cls.txtPrice.text = math.floor(cls.data.price_twd/100)
            elseif _currency == "HKD" then
                cls.txtPrice.text = math.floor(cls.data.price_hkd/100)
            elseif _currency == "USD" then
                cls.txtPrice.text = cls.data.price_usd/100
            else
                cls.txtPrice.text = math.floor(cls.data.price_twd/100)
            end
        else
            cls.txtPrice.text = cls.data.price
        end
    end
end

return RechargeLayer;
