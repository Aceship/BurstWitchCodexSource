---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/8/21 10:24
---

local CBaseLayer = core.require("xlua/lua_UI/UIBaseLayer.txt")
local WitchSkinLayer = class("WitchSkinLayer", CBaseLayer)

local buttontypes = {
    btn_comment = "Top/btn_comment",
    btn_share   = "Top/btn_share",
    btn_corss   = "Bottom/btn_corss",
    btn_skill   = "Bottom/btn_skill",
    btn_buy     = "Bottom/btn_buy"
}

function WitchSkinLayer:ctor(super, skinId)
    CBaseLayer.ctor(self)
    self._prefab = {
        path = "prefab_witch/UI_WitchSkinLayer"
    }
    self._topData = {
        showBtnBack = true,
        showPlayerInfo = false,
        showTopInfo = false,
        topInfo = {}
    }
    self._bgData = {
        showEffect = true,
        bgType = BackBgPath.BG_PLOT
    }
    self._addStack = true
    self._hideOtherLayer = true
    self._fading = false
    self._curSkinId = tonumber(skinId)
    self.m_heroid = Hero:GetHeroIdBySkinId(skinId)
    self:onEnter()
end
function WitchSkinLayer:onEnter()
    self:RegisterHandler()
    self:createPnl()
    self:registerButtonEvent(buttontypes)
    self:initPnl()
    CS.UnityHelper.NotchfitY(self.layer:Get("Top"))
end

function WitchSkinLayer:onExit()
    self.m_titleTxt = nil
    self.m_titleTxtE = nil
    self.m_skinNameTxt = nil
    self.m_skinNameTxtE = nil
    self.m_introTxt = nil

    self.m_gainPathTxt = nil
    
    self._txtBuyTitle = nil
    self._txtBuyTitleE = nil
    self._txtBuyPrice = nil
    self._imgPriceIcon = nil

    self.m_itemcfgs = nil
    self.m_skinCfg = nil
    self.m_skinItems = nil
    self.m_hero = nil

    if self._screenUI ~= nil then
        for i, v in pairs(self._screenUI) do
            self._screenUI[i] = nil
        end
    end
    self._screenUI = nil

    CBaseLayer.onExit(self)
end

---初始化
function WitchSkinLayer:initPnl()
    self._comps = clearbase:new()

    self._comps.buyTrans    = self.layer:Get("Bottom/btn_buy")
    self._comps.corssTrans  = self.layer:Get("Bottom/btn_corss")
    self._comps.wearTrans   = self.layer:Get("Bottom/trans_wear")
    self._comps.shareTrans  = self.layer:Get("Top/btn_share")
    self._comps.skillTrans  = self.layer:Get("Bottom/btn_skill")
    self._comps.numberText  = self.layer:GetTextComponent("Top/btn_comment/txt_comment_num")
    self._comps.numberText:SetText("0")

    self.m_titleTxt = self.layer:GetTextComponent("Bottom/skin/title_txt")
    self.m_titleTxtE = self.layer:GetTextComponent("Bottom/skin/title_txt_en")
    self.m_skinNameTxt = self.layer:GetTextComponent("Top/trans_title/skin_name_txt")
    self.m_skinNameTxtE = self.layer:GetTextComponent("Top/trans_title/skin_name_txt_E")
    self.m_introTxt = self.layer:GetTextComponent("Top/trans_title/intro_txt")

    self.m_gainPathTxt = self.layer:GetTextComponent("Bottom/gain_path_txt")
    --购买
    self._txtBuyPrice    = self.layer:GetTextComponent("Bottom/btn_buy/txt_buy_price")
    self._imgPriceIcon = self.layer:GetImageComponent("Bottom/btn_buy/img_price_icon")

    self.img_tip = self.layer:Get("Top/btn_share/img_tip")
    self.txt_tipinfo = self.layer:GetTextComponent("Top/btn_share/img_tip/txt_tipinfo")
    self.img_ = self.layer:GetImageComponent("Top/btn_share/img_tip/img_")
    self.txt_tipnum = self.layer:GetTextComponent("Top/btn_share/img_tip/txt_tipnum")

    self.m_group = self.layer:Get("Bottom/skin/MGroup"):GetComponent("MGroup")
        
    self._screen = UIShareCtrl:new(self.layer)
    
    -- 截屏时需要隐藏的ui元素
    self._screenUI = {
        [1] = self._comps.shareTrans,
        [2] = self._comps.corssTrans,
        [3] = self.layer:Get("Bottom"),
        [4] = self.layer:Get("Top/btn_comment"),
        [5] = self.layer:Get("Top/trans_title/intro_txt"),
        [6] = self.layer:Get("Top/btn_share/img_tip")
    }
    self:Init()
    self:FirstShareOrWeekFirstShare()
end

function WitchSkinLayer:showScreenUI(show)
    local cfg = Hero:GetCfg(self.m_heroid)
    if 1 == self.m_currentSelectIndex then
        self.m_skinNameTxt.text = cfg.Name .. "·" .. cfg.Name_after
    else
        self.m_skinNameTxt.text = cfg.Name .. "·" .. self.m_skinCfg[self.m_currentSelectIndex].name
    end

    for _, obj in pairs(self._screenUI) do
        obj:SetVisible(show)
    end
    Groble_UIMgr:SetBackButtonVisible(show)
    self._screen:SetVisible(not show)
   -- self.img_tip:SetVisible(not Player:HasShared())
end

function WitchSkinLayer:Init()
    self.m_itemcfgs = {}
    self.m_skinCfg = {}
    self.m_skinItems = {}
    self.m_hero = Hero:GetHero(self.m_heroid)
    local tempIndex = 0
    local skincfg, isAdd = false
    for i = 1, #self.m_hero.skinids do
        skincfg = Hero:GetSkinCfg(self.m_hero.skinids[i])
        if (skincfg.skinIsHaveShow == -1) then
            isAdd = true
        elseif (skincfg.skinIsHaveShow == 1) then
            if (Item:GetCount(self.m_hero.skinids[i]) >= 1) then
                isAdd = true
            else
                isAdd = false
            end
        end
        if (isAdd) then
            table.insert(self.m_itemcfgs, Item:GetCfg(self.m_hero.skinids[i]))
            table.insert(self.m_skinCfg, skincfg)
        end
    end
    if (self.m_group ~= nil) then
        self.m_group.onBeginDrag = function()
            self._fading = true
        end
        self.m_group.SelectAction = function()
            self:SelectSkin()
        end ---此处添加事件,当前选中皮肤切换时调用
        for i, v in ipairs(self.m_itemcfgs) do
            if (tonumber(v.id) == self._curSkinId) then
                tempIndex = i - 1
            end
        end
        self.m_group:Init(#self.m_itemcfgs, tempIndex)

        for i = 1, #self.m_itemcfgs do
            self.m_skinItems[i] = self.m_group.transform:Find(tostring(i))
            --title_txt
            self.m_skinItems[i]:GetButtonComponent("img_icon"):AddButtonListener(
                function()
                    self._fading = true
                    self.m_group:ChangeToIndex(i - 1)
                end)
            ---此处设置皮肤
            Hero:SetSkinImage(self.m_skinItems[i]:GetImageComponent("img_icon"), self.m_skinCfg[i].id)
            self.m_skinItems[i]:Get("img_new"):SetVisible(Hero:IsNewSkin(self.m_heroid, tonumber(self.m_skinCfg[i].id)))

            Hero:SetSkinRare(self.m_skinItems[i]:Get("img_skinQuality"), self.m_skinCfg[i].SkinRare)
            Hero:SetSkinTheme(self.m_skinItems[i]:Get("img_cursor"), self.m_skinCfg[i].SkinTheme)
        end
    end
    Comment:SetCommentData(Comment.CommentMod.MODULE_SKINS, self.m_hero.skinid, 1)
end

---显示UI
function WitchSkinLayer:show()
    self:showLayer()
    self:playAni("WitchSkinLayerAni")
    self.layer:DelayCall(
        0.4,
        function()
            Guide:ContinueGuideEvent(self.__cname)
        end)
end

function WitchSkinLayer:showLayer()
    -- self:SelectSkin()
    CBaseLayer.showLayer(self)
end

function WitchSkinLayer:onButtonClick(buttontype)
    if buttontype == buttontypes.btn_comment then
        Comment:GetServerDataReq()
    elseif buttontype == buttontypes.btn_share then
        self:showScreenUI(false)
    -- Player:ShareGiftReq()
        Groble_UIMgr:ShowShareLayer(
            function()
                self:showScreenUI(true)
                if Player:HasShared() then
                    self.img_tip:SetVisible(false)
                end
                self.m_skinNameTxt.text = self.m_skinCfg[self.m_currentSelectIndex].name
            end, true)
    elseif buttontype == buttontypes.btn_corss then
        if not self.m_hero.owner then
            Groble_UIMgr:ShowGameWordTipsLayer(80000019)
        else
            Hero:CutSkinReq(self.m_heroid, self.m_itemcfgs[self.m_currentSelectIndex].id)
        end
    elseif buttontype == buttontypes.btn_skill then
        core.require("xlua/lua_UI/Witch/WitchSkillNewLayer.txt"):new():show(self.m_heroid, true, 
            tonumber(self.m_skinCfg[self.m_currentSelectIndex].id))
    elseif buttontype == buttontypes.btn_buy then
        if self.m_skinCfg[self.m_currentSelectIndex].buyType == Hero.SKIN_BUY_TYPE.GOID then
            Recharge:SetCurSelectGiftPagId(self.m_skinCfg[self.m_currentSelectIndex].buyId)
            Recharge:OpenBuyTipsLayer()
        end
    end
end

---事件注册
function WitchSkinLayer:RegisterHandler()
    self:addEventListener(EVENT_TYPE.SCRIPT_ACTION, EVENT_NAME.HERO_CUT_SKIN,
        function()
            self:SelectSkin()
        end )
    self:addEventListener(EVENT_TYPE.COMMENT_DATA_UPDATE_OVER, self.__cname,
        function()
            Comment:LoadCache()
            Comment:GetCommentReq()
        end )

    self:addEventListener(EVENT_TYPE.OPEN_COMMENT_LAYER, self.__cname,
        function()
            core.require("xlua/lua_UI/Comment/CommentLayer.txt"):new():show()
        end)

    self:addEventListener(EVENT_TYPE.SCRIPT_ACTION, EVENT_NAME.BUY_SKIN_REP,
        function()
            --购买皮肤礼包
            Hero:CutSkinReq(self.m_heroid, self.m_itemcfgs[self.m_currentSelectIndex].id)
        end)

    self:addEventListener(EVENT_TYPE.BACK_TIPS_LAYER, self.__cname,
        function()
            --设置皮肤券设置
            local charge = Recharge:GetData(self.m_skinCfg[self.m_currentSelectIndex].buyId)
            local curPrice = math.ceil(charge.price * charge.discount)
            local curNum = Item:GetCount(charge.priceId)
            if (curNum < curPrice) then
                self._txtBuyPrice:SetTextColor(1.00, 0.40, 0.32, 1.00)
            else
                self._txtBuyPrice:SetTextColor(0, 0, 0, 1)
            end
        end)

        self:addEventListener(
            EVENT_TYPE.SHOW_SHARE_CALLBACK,
            self.__cname,
            function()
                print("刷新ui显示魔女界面")
                self.img_tip:SetVisible(false)
            end
        )
end

---切换皮肤时调用
function WitchSkinLayer:SelectSkin()
    self.m_gainPathTxt:SetVisible(false) ---关闭礼包获得提示    

    self.m_currentSelectIndex = self.m_group.m_CurrentSelectIndex + 1 ---设置当前选中的皮肤Index
    self._curSelectSkinId = tonumber(self.m_skinCfg[self.m_currentSelectIndex].id)

    Comment:SetCommentData(Comment.CommentMod.MODULE_SKINS, self._curSelectSkinId, 1) ---此处设置评论ID数据
    Comment:GetModeCommentNumReq(
        function()
            self._comps.numberText:SetText(Comment:GetCommentNumStr(self._curSelectSkinId))
        end)

    self._isOwner = false
    if self.m_skinCfg[self.m_currentSelectIndex].buyType == Hero.SKIN_BUY_TYPE.NIL then
        self._isOwner = true
    else
        self._isOwner = Item:GetCount(self.m_itemcfgs[self.m_currentSelectIndex].id) > 0
    end
    
    if tonumber(self.m_hero.skinid) == tonumber(self.m_itemcfgs[self.m_currentSelectIndex].id) then
        self._comps.buyTrans:SetVisible(false)
        self._comps.wearTrans:SetVisible(true)
        self._comps.corssTrans:SetVisible(false)
    else
        if self._isOwner then
            self._comps.buyTrans:SetVisible(false)
            self._comps.wearTrans:SetVisible(false)
            self._comps.corssTrans:SetVisible(true)
        else
            self._comps.buyTrans:SetVisible(false)
            self._comps.wearTrans:SetVisible(false)
            self._comps.corssTrans:SetVisible(false)
            if self.m_skinCfg[self.m_currentSelectIndex].buyType == Hero.SKIN_BUY_TYPE.GOID then
                -- 皮肤券可购买
                self._comps.buyTrans:SetVisible(true)
                
                local charge = Recharge:GetData(self.m_skinCfg[self.m_currentSelectIndex].buyId)
                local curPrice = math.ceil(charge.price * charge.discount)
                self._txtBuyPrice:SetText(curPrice)
                Item:SetItemIcon(self._imgPriceIcon.transform, charge.priceId)
                local curNum = Item:GetCount(charge.priceId)
                if (curNum < curPrice) then
                    self._txtBuyPrice:SetTextColor(1.00, 0.40, 0.32, 1.00)
                else
                    self._txtBuyPrice:SetTextColor(0, 0, 0, 1)
                end

            elseif self.m_skinCfg[self.m_currentSelectIndex].buyType == Hero.SKIN_BUY_TYPE.ACTIVITY then
                -- 活动获得
                self.m_gainPathTxt:SetVisible(true)
                self.m_gainPathTxt.text = self.m_skinCfg[self.m_currentSelectIndex].buyDes
            else
                -- 没有获得途径
            end
        end
    end

    local spineId = self._curSelectSkinId
    if self.m_skinCfg[self.m_currentSelectIndex].buyType == Hero.SKIN_BUY_TYPE.NIL then
        spineId = tonumber(self.m_heroid)
        self._comps.shareTrans:SetVisible(true)
    else
        self._comps.shareTrans:SetVisible(self._isOwner)
    end
    if not GameSdkMgr:IsHasShare() then
        self._comps.shareTrans:SetVisible(false)
    end

    ---设置Spine
    Hero:LoadSpineAsync(self.__cname, self.layer:Get("spine_panel"), spineId, Hero.SPINE_UI_TYPE_SKIN,
        function(spine)
        end, true)

    self._comps.skillTrans:SetVisible(self.m_skinCfg[self.m_currentSelectIndex].previewbutton > 0)


    self.m_skinNameTxt.text = self.m_skinCfg[self.m_currentSelectIndex].name
    self.m_skinNameTxtE.text = self.m_skinCfg[self.m_currentSelectIndex].nameE
    self.m_introTxt.text = self.m_skinCfg[self.m_currentSelectIndex].des
    self.m_titleTxt.text = self.m_skinCfg[self.m_currentSelectIndex].name
    self.m_titleTxtE.text = self.m_skinCfg[self.m_currentSelectIndex].nameE

    self._fading = false

    Hero:NewSkinEnter(self.m_heroid, tonumber(self.m_itemcfgs[self.m_currentSelectIndex].id))
end

--分享Tip内容赋值
function WitchSkinLayer:FirstShareOrWeekFirstShare()
    if Player:IsFirstShare()  then
        print("魔女界面游戏首次分享")
        self.img_tip:SetVisible(true)
        self.img_:LoadSprite("source_icon/item/" .. Player.FirstShare[1])
        self.txt_tipinfo:SetText(LanguageMgr:GetTextByID(888033))
        self.txt_tipnum.text = Player.FirstShare[2]
    else
        if Player:HasShared() then
            self.img_tip:SetVisible(false)
        else
            print("魔女界面每周首次分享")
                self.img_tip:SetVisible(true)
                self.img_:LoadSprite("source_icon/item/" .. Player.WeekFirstShare[1])
                self.txt_tipinfo:SetText(LanguageMgr:GetTextByID(888034))
                self.txt_tipnum.text = Player.WeekFirstShare[2]
        end
    end
end

return WitchSkinLayer
